{"version":3,"names":["createAddInitializerMethod","initializers","decoratorFinishedRef","addInitializer","initializer","assertNotFinished","assertCallable","push","memberDec","dec","name","desc","kind","isStatic","isPrivate","value","kindStr","ctx","static","private","v","get","set","call","access","fnName","Error","fn","hint","TypeError","assertValidReturnValue","type","undefined","init","applyMemberDec","ret","base","decInfo","decs","Object","getOwnPropertyDescriptor","newValue","i","length","newInit","instance","ownInitializers","originalInitializer","args","defineProperty","applyMemberDecs","Class","decInfos","protoInitializers","staticInitializers","existingProtoNonFields","Map","existingStaticNonFields","Array","isArray","prototype","existingNonFields","existingKind","pushInitializers","applyClassDecs","targetClass","classDecs","newClass","nextNewClass","applyDecs2203R","memberDecs","e","c"],"sources":["../../src/helpers/applyDecs2203R.js"],"sourcesContent":["/* @minVersion 7.20.0 */\n\n/**\n  Enums are used in this file, but not assigned to vars to avoid non-hoistable values\n\n  CONSTRUCTOR = 0;\n  PUBLIC = 1;\n  PRIVATE = 2;\n\n  FIELD = 0;\n  ACCESSOR = 1;\n  METHOD = 2;\n  GETTER = 3;\n  SETTER = 4;\n\n  STATIC = 5;\n\n  CLASS = 10; // only used in assertValidReturnValue\n*/\n\nfunction createAddInitializerMethod(initializers, decoratorFinishedRef) {\n  return function addInitializer(initializer) {\n    assertNotFinished(decoratorFinishedRef, \"addInitializer\");\n    assertCallable(initializer, \"An initializer\");\n    initializers.push(initializer);\n  };\n}\n\nfunction memberDec(\n  dec,\n  name,\n  desc,\n  initializers,\n  kind,\n  isStatic,\n  isPrivate,\n  value\n) {\n  var kindStr;\n\n  switch (kind) {\n    case 1 /* ACCESSOR */:\n      kindStr = \"accessor\";\n      break;\n    case 2 /* METHOD */:\n      kindStr = \"method\";\n      break;\n    case 3 /* GETTER */:\n      kindStr = \"getter\";\n      break;\n    case 4 /* SETTER */:\n      kindStr = \"setter\";\n      break;\n    default:\n      kindStr = \"field\";\n  }\n\n  var ctx = {\n    kind: kindStr,\n    name: isPrivate ? \"#\" + name : name,\n    static: isStatic,\n    private: isPrivate,\n  };\n\n  var decoratorFinishedRef = { v: false };\n\n  if (kind !== 0 /* FIELD */) {\n    ctx.addInitializer = createAddInitializerMethod(\n      initializers,\n      decoratorFinishedRef\n    );\n  }\n\n  var get, set;\n  if (kind === 0 /* FIELD */) {\n    if (isPrivate) {\n      get = desc.get;\n      set = desc.set;\n    } else {\n      get = function () {\n        return this[name];\n      };\n      set = function (v) {\n        this[name] = v;\n      };\n    }\n  } else if (kind === 2 /* METHOD */) {\n    get = function () {\n      return desc.value;\n    };\n  } else {\n    // replace with values that will go through the final getter and setter\n    if (kind === 1 /* ACCESSOR */ || kind === 3 /* GETTER */) {\n      get = function () {\n        return desc.get.call(this);\n      };\n    }\n\n    if (kind === 1 /* ACCESSOR */ || kind === 4 /* SETTER */) {\n      set = function (v) {\n        desc.set.call(this, v);\n      };\n    }\n  }\n  ctx.access =\n    get && set ? { get: get, set: set } : get ? { get: get } : { set: set };\n\n  try {\n    return dec(value, ctx);\n  } finally {\n    decoratorFinishedRef.v = true;\n  }\n}\n\nfunction assertNotFinished(decoratorFinishedRef, fnName) {\n  if (decoratorFinishedRef.v) {\n    throw new Error(\n      \"attempted to call \" + fnName + \" after decoration was finished\"\n    );\n  }\n}\n\nfunction assertCallable(fn, hint) {\n  if (typeof fn !== \"function\") {\n    throw new TypeError(hint + \" must be a function\");\n  }\n}\n\nfunction assertValidReturnValue(kind, value) {\n  var type = typeof value;\n\n  if (kind === 1 /* ACCESSOR */) {\n    if (type !== \"object\" || value === null) {\n      throw new TypeError(\n        \"accessor decorators must return an object with get, set, or init properties or void 0\"\n      );\n    }\n    if (value.get !== undefined) {\n      assertCallable(value.get, \"accessor.get\");\n    }\n    if (value.set !== undefined) {\n      assertCallable(value.set, \"accessor.set\");\n    }\n    if (value.init !== undefined) {\n      assertCallable(value.init, \"accessor.init\");\n    }\n  } else if (type !== \"function\") {\n    var hint;\n    if (kind === 0 /* FIELD */) {\n      hint = \"field\";\n    } else if (kind === 10 /* CLASS */) {\n      hint = \"class\";\n    } else {\n      hint = \"method\";\n    }\n    throw new TypeError(hint + \" decorators must return a function or void 0\");\n  }\n}\n\nfunction applyMemberDec(\n  ret,\n  base,\n  decInfo,\n  name,\n  kind,\n  isStatic,\n  isPrivate,\n  initializers\n) {\n  var decs = decInfo[0];\n\n  var desc, init, value;\n\n  if (isPrivate) {\n    if (kind === 0 /* FIELD */ || kind === 1 /* ACCESSOR */) {\n      desc = {\n        get: decInfo[3],\n        set: decInfo[4],\n      };\n    } else if (kind === 3 /* GETTER */) {\n      desc = {\n        get: decInfo[3],\n      };\n    } else if (kind === 4 /* SETTER */) {\n      desc = {\n        set: decInfo[3],\n      };\n    } else {\n      desc = {\n        value: decInfo[3],\n      };\n    }\n  } else if (kind !== 0 /* FIELD */) {\n    desc = Object.getOwnPropertyDescriptor(base, name);\n  }\n\n  if (kind === 1 /* ACCESSOR */) {\n    value = {\n      get: desc.get,\n      set: desc.set,\n    };\n  } else if (kind === 2 /* METHOD */) {\n    value = desc.value;\n  } else if (kind === 3 /* GETTER */) {\n    value = desc.get;\n  } else if (kind === 4 /* SETTER */) {\n    value = desc.set;\n  }\n\n  var newValue, get, set;\n\n  if (typeof decs === \"function\") {\n    newValue = memberDec(\n      decs,\n      name,\n      desc,\n      initializers,\n      kind,\n      isStatic,\n      isPrivate,\n      value\n    );\n\n    if (newValue !== void 0) {\n      assertValidReturnValue(kind, newValue);\n\n      if (kind === 0 /* FIELD */) {\n        init = newValue;\n      } else if (kind === 1 /* ACCESSOR */) {\n        init = newValue.init;\n        get = newValue.get || value.get;\n        set = newValue.set || value.set;\n\n        value = { get: get, set: set };\n      } else {\n        value = newValue;\n      }\n    }\n  } else {\n    for (var i = decs.length - 1; i >= 0; i--) {\n      var dec = decs[i];\n\n      newValue = memberDec(\n        dec,\n        name,\n        desc,\n        initializers,\n        kind,\n        isStatic,\n        isPrivate,\n        value\n      );\n\n      if (newValue !== void 0) {\n        assertValidReturnValue(kind, newValue);\n        var newInit;\n\n        if (kind === 0 /* FIELD */) {\n          newInit = newValue;\n        } else if (kind === 1 /* ACCESSOR */) {\n          newInit = newValue.init;\n          get = newValue.get || value.get;\n          set = newValue.set || value.set;\n\n          value = { get: get, set: set };\n        } else {\n          value = newValue;\n        }\n\n        if (newInit !== void 0) {\n          if (init === void 0) {\n            init = newInit;\n          } else if (typeof init === \"function\") {\n            init = [init, newInit];\n          } else {\n            init.push(newInit);\n          }\n        }\n      }\n    }\n  }\n\n  if (kind === 0 /* FIELD */ || kind === 1 /* ACCESSOR */) {\n    if (init === void 0) {\n      // If the initializer was void 0, sub in a dummy initializer\n      init = function (instance, init) {\n        return init;\n      };\n    } else if (typeof init !== \"function\") {\n      var ownInitializers = init;\n\n      init = function (instance, init) {\n        var value = init;\n\n        for (var i = 0; i < ownInitializers.length; i++) {\n          value = ownInitializers[i].call(instance, value);\n        }\n\n        return value;\n      };\n    } else {\n      var originalInitializer = init;\n\n      init = function (instance, init) {\n        return originalInitializer.call(instance, init);\n      };\n    }\n\n    ret.push(init);\n  }\n\n  if (kind !== 0 /* FIELD */) {\n    if (kind === 1 /* ACCESSOR */) {\n      desc.get = value.get;\n      desc.set = value.set;\n    } else if (kind === 2 /* METHOD */) {\n      desc.value = value;\n    } else if (kind === 3 /* GETTER */) {\n      desc.get = value;\n    } else if (kind === 4 /* SETTER */) {\n      desc.set = value;\n    }\n\n    if (isPrivate) {\n      if (kind === 1 /* ACCESSOR */) {\n        ret.push(function (instance, args) {\n          return value.get.call(instance, args);\n        });\n        ret.push(function (instance, args) {\n          return value.set.call(instance, args);\n        });\n      } else if (kind === 2 /* METHOD */) {\n        ret.push(value);\n      } else {\n        ret.push(function (instance, args) {\n          return value.call(instance, args);\n        });\n      }\n    } else {\n      Object.defineProperty(base, name, desc);\n    }\n  }\n}\n\nfunction applyMemberDecs(Class, decInfos) {\n  var ret = [];\n  var protoInitializers;\n  var staticInitializers;\n\n  var existingProtoNonFields = new Map();\n  var existingStaticNonFields = new Map();\n\n  for (var i = 0; i < decInfos.length; i++) {\n    var decInfo = decInfos[i];\n\n    // skip computed property names\n    if (!Array.isArray(decInfo)) continue;\n\n    var kind = decInfo[1];\n    var name = decInfo[2];\n    var isPrivate = decInfo.length > 3;\n\n    var isStatic = kind >= 5; /* STATIC */\n    var base;\n    var initializers;\n\n    if (isStatic) {\n      base = Class;\n      kind = kind - 5 /* STATIC */;\n      // initialize staticInitializers when we see a non-field static member\n      if (kind !== 0 /* FIELD */) {\n        staticInitializers = staticInitializers || [];\n        initializers = staticInitializers;\n      }\n    } else {\n      base = Class.prototype;\n      // initialize protoInitializers when we see a non-field member\n      if (kind !== 0 /* FIELD */) {\n        protoInitializers = protoInitializers || [];\n        initializers = protoInitializers;\n      }\n    }\n\n    if (kind !== 0 /* FIELD */ && !isPrivate) {\n      var existingNonFields = isStatic\n        ? existingStaticNonFields\n        : existingProtoNonFields;\n\n      var existingKind = existingNonFields.get(name) || 0;\n\n      if (\n        existingKind === true ||\n        (existingKind === 3 /* GETTER */ && kind !== 4) /* SETTER */ ||\n        (existingKind === 4 /* SETTER */ && kind !== 3) /* GETTER */\n      ) {\n        throw new Error(\n          \"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \" +\n            name\n        );\n      } else if (!existingKind && kind > 2 /* METHOD */) {\n        existingNonFields.set(name, kind);\n      } else {\n        existingNonFields.set(name, true);\n      }\n    }\n\n    applyMemberDec(\n      ret,\n      base,\n      decInfo,\n      name,\n      kind,\n      isStatic,\n      isPrivate,\n      initializers\n    );\n  }\n\n  pushInitializers(ret, protoInitializers);\n  pushInitializers(ret, staticInitializers);\n  return ret;\n}\n\nfunction pushInitializers(ret, initializers) {\n  if (initializers) {\n    ret.push(function (instance) {\n      for (var i = 0; i < initializers.length; i++) {\n        initializers[i].call(instance);\n      }\n      return instance;\n    });\n  }\n}\n\nfunction applyClassDecs(targetClass, classDecs) {\n  if (classDecs.length > 0) {\n    var initializers = [];\n    var newClass = targetClass;\n    var name = targetClass.name;\n\n    for (var i = classDecs.length - 1; i >= 0; i--) {\n      var decoratorFinishedRef = { v: false };\n\n      try {\n        var nextNewClass = classDecs[i](newClass, {\n          kind: \"class\",\n          name: name,\n          addInitializer: createAddInitializerMethod(\n            initializers,\n            decoratorFinishedRef\n          ),\n        });\n      } finally {\n        decoratorFinishedRef.v = true;\n      }\n\n      if (nextNewClass !== undefined) {\n        assertValidReturnValue(10 /* CLASS */, nextNewClass);\n        newClass = nextNewClass;\n      }\n    }\n\n    return [\n      newClass,\n      function () {\n        for (var i = 0; i < initializers.length; i++) {\n          initializers[i].call(newClass);\n        }\n      },\n    ];\n  }\n  // The transformer will not emit assignment when there are no class decorators,\n  // so we don't have to return an empty array here.\n}\n\n/**\n  Basic usage:\n\n  applyDecs(\n    Class,\n    [\n      // member decorators\n      [\n        dec,                // dec or array of decs\n        0,                  // kind of value being decorated\n        'prop',             // name of public prop on class containing the value being decorated,\n        '#p',               // the name of the private property (if is private, void 0 otherwise),\n      ]\n    ],\n    [\n      // class decorators\n      dec1, dec2\n    ]\n  )\n  ```\n\n  Fully transpiled example:\n\n  ```js\n  @dec\n  class Class {\n    @dec\n    a = 123;\n\n    @dec\n    #a = 123;\n\n    @dec\n    @dec2\n    accessor b = 123;\n\n    @dec\n    accessor #b = 123;\n\n    @dec\n    c() { console.log('c'); }\n\n    @dec\n    #c() { console.log('privC'); }\n\n    @dec\n    get d() { console.log('d'); }\n\n    @dec\n    get #d() { console.log('privD'); }\n\n    @dec\n    set e(v) { console.log('e'); }\n\n    @dec\n    set #e(v) { console.log('privE'); }\n  }\n\n\n  // becomes\n  let initializeInstance;\n  let initializeClass;\n\n  let initA;\n  let initPrivA;\n\n  let initB;\n  let initPrivB, getPrivB, setPrivB;\n\n  let privC;\n  let privD;\n  let privE;\n\n  let Class;\n  class _Class {\n    static {\n      let ret = applyDecs(\n        this,\n        [\n          [dec, 0, 'a'],\n          [dec, 0, 'a', (i) => i.#a, (i, v) => i.#a = v],\n          [[dec, dec2], 1, 'b'],\n          [dec, 1, 'b', (i) => i.#privBData, (i, v) => i.#privBData = v],\n          [dec, 2, 'c'],\n          [dec, 2, 'c', () => console.log('privC')],\n          [dec, 3, 'd'],\n          [dec, 3, 'd', () => console.log('privD')],\n          [dec, 4, 'e'],\n          [dec, 4, 'e', () => console.log('privE')],\n        ],\n        [\n          dec\n        ]\n      )\n\n      initA = ret[0];\n\n      initPrivA = ret[1];\n\n      initB = ret[2];\n\n      initPrivB = ret[3];\n      getPrivB = ret[4];\n      setPrivB = ret[5];\n\n      privC = ret[6];\n\n      privD = ret[7];\n\n      privE = ret[8];\n\n      initializeInstance = ret[9];\n\n      Class = ret[10]\n\n      initializeClass = ret[11];\n    }\n\n    a = (initializeInstance(this), initA(this, 123));\n\n    #a = initPrivA(this, 123);\n\n    #bData = initB(this, 123);\n    get b() { return this.#bData }\n    set b(v) { this.#bData = v }\n\n    #privBData = initPrivB(this, 123);\n    get #b() { return getPrivB(this); }\n    set #b(v) { setPrivB(this, v); }\n\n    c() { console.log('c'); }\n\n    #c(...args) { return privC(this, ...args) }\n\n    get d() { console.log('d'); }\n\n    get #d() { return privD(this); }\n\n    set e(v) { console.log('e'); }\n\n    set #e(v) { privE(this, v); }\n  }\n\n  initializeClass(Class);\n */\nexport default function applyDecs2203R(targetClass, memberDecs, classDecs) {\n  return {\n    e: applyMemberDecs(targetClass, memberDecs),\n    // Lazily apply class decorations so that member init locals can be properly bound.\n    get c() {\n      return applyClassDecs(targetClass, classDecs);\n    },\n  };\n}\n"],"mappings":"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"}