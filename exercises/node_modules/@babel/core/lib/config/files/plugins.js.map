{"version":3,"names":["debug","buildDebug","EXACT_RE","BABEL_PLUGIN_PREFIX_RE","BABEL_PRESET_PREFIX_RE","BABEL_PLUGIN_ORG_RE","BABEL_PRESET_ORG_RE","OTHER_PLUGIN_ORG_RE","OTHER_PRESET_ORG_RE","OTHER_ORG_DEFAULT_RE","resolvePlugin","name","dirname","resolveStandardizedName","resolvePreset","loadPlugin","filepath","value","requireModule","loadPreset","standardizeName","type","path","isAbsolute","isPreset","replace","resolveAlternativesHelper","standardizedName","error","code","message","oppositeType","tryRequireResolve","id","paths","tryImportMetaResolve","options","importMetaResolve","resolveStandardizedNameForRequire","it","res","next","done","resolveStandardizedNameForImport","parentUrl","pathToFileURL","join","href","fileURLToPath","gensync","sync","process","cwd","async","supportsESM","e","e2","LOADING_MODULES","Set","isAsync","has","Error","add","loadCjsOrMjsDefault","err","delete"],"sources":["../../../src/config/files/plugins.ts"],"sourcesContent":["/**\n * This file handles all logic for converting string-based configuration references into loaded objects.\n */\n\nimport buildDebug from \"debug\";\nimport path from \"path\";\nimport gensync, { type Handler } from \"gensync\";\nimport { isAsync } from \"../../gensync-utils/async\";\nimport loadCjsOrMjsDefault, { supportsESM } from \"./module-types\";\nimport { fileURLToPath, pathToFileURL } from \"url\";\n\nimport importMetaResolve from \"./import-meta-resolve\";\n\nimport { createRequire } from \"module\";\nconst require = createRequire(import.meta.url);\n\nconst debug = buildDebug(\"babel:config:loading:files:plugins\");\n\nconst EXACT_RE = /^module:/;\nconst BABEL_PLUGIN_PREFIX_RE = /^(?!@|module:|[^/]+\\/|babel-plugin-)/;\nconst BABEL_PRESET_PREFIX_RE = /^(?!@|module:|[^/]+\\/|babel-preset-)/;\nconst BABEL_PLUGIN_ORG_RE = /^(@babel\\/)(?!plugin-|[^/]+\\/)/;\nconst BABEL_PRESET_ORG_RE = /^(@babel\\/)(?!preset-|[^/]+\\/)/;\nconst OTHER_PLUGIN_ORG_RE =\n  /^(@(?!babel\\/)[^/]+\\/)(?![^/]*babel-plugin(?:-|\\/|$)|[^/]+\\/)/;\nconst OTHER_PRESET_ORG_RE =\n  /^(@(?!babel\\/)[^/]+\\/)(?![^/]*babel-preset(?:-|\\/|$)|[^/]+\\/)/;\nconst OTHER_ORG_DEFAULT_RE = /^(@(?!babel$)[^/]+)$/;\n\nexport function* resolvePlugin(name: string, dirname: string): Handler<string> {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return yield* resolveStandardizedName(\"plugin\", name, dirname);\n}\n\nexport function* resolvePreset(name: string, dirname: string): Handler<string> {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return yield* resolveStandardizedName(\"preset\", name, dirname);\n}\n\nexport function* loadPlugin(\n  name: string,\n  dirname: string,\n): Handler<{ filepath: string; value: unknown }> {\n  const filepath = yield* resolvePlugin(name, dirname);\n\n  const value = yield* requireModule(\"plugin\", filepath);\n  debug(\"Loaded plugin %o from %o.\", name, dirname);\n\n  return { filepath, value };\n}\n\nexport function* loadPreset(\n  name: string,\n  dirname: string,\n): Handler<{ filepath: string; value: unknown }> {\n  const filepath = yield* resolvePreset(name, dirname);\n\n  const value = yield* requireModule(\"preset\", filepath);\n\n  debug(\"Loaded preset %o from %o.\", name, dirname);\n\n  return { filepath, value };\n}\n\nfunction standardizeName(type: \"plugin\" | \"preset\", name: string) {\n  // Let absolute and relative paths through.\n  if (path.isAbsolute(name)) return name;\n\n  const isPreset = type === \"preset\";\n\n  return (\n    name\n      // foo -> babel-preset-foo\n      .replace(\n        isPreset ? BABEL_PRESET_PREFIX_RE : BABEL_PLUGIN_PREFIX_RE,\n        `babel-${type}-`,\n      )\n      // @babel/es2015 -> @babel/preset-es2015\n      .replace(\n        isPreset ? BABEL_PRESET_ORG_RE : BABEL_PLUGIN_ORG_RE,\n        `$1${type}-`,\n      )\n      // @foo/mypreset -> @foo/babel-preset-mypreset\n      .replace(\n        isPreset ? OTHER_PRESET_ORG_RE : OTHER_PLUGIN_ORG_RE,\n        `$1babel-${type}-`,\n      )\n      // @foo -> @foo/babel-preset\n      .replace(OTHER_ORG_DEFAULT_RE, `$1/babel-${type}`)\n      // module:mypreset -> mypreset\n      .replace(EXACT_RE, \"\")\n  );\n}\n\ntype Result<T> = { error: Error; value: null } | { error: null; value: T };\n\nfunction* resolveAlternativesHelper(\n  type: \"plugin\" | \"preset\",\n  name: string,\n): Iterator<string, string, Result<string>> {\n  const standardizedName = standardizeName(type, name);\n  const { error, value } = yield standardizedName;\n  if (!error) return value;\n\n  // @ts-expect-error code may not index error\n  if (error.code !== \"MODULE_NOT_FOUND\") throw error;\n\n  if (standardizedName !== name && !(yield name).error) {\n    error.message += `\\n- If you want to resolve \"${name}\", use \"module:${name}\"`;\n  }\n\n  if (!(yield standardizeName(type, \"@babel/\" + name)).error) {\n    error.message += `\\n- Did you mean \"@babel/${name}\"?`;\n  }\n\n  const oppositeType = type === \"preset\" ? \"plugin\" : \"preset\";\n  if (!(yield standardizeName(oppositeType, name)).error) {\n    error.message += `\\n- Did you accidentally pass a ${oppositeType} as a ${type}?`;\n  }\n\n  throw error;\n}\n\nfunction tryRequireResolve(\n  id: Parameters<RequireResolve>[0],\n  { paths: [dirname] }: Parameters<RequireResolve>[1],\n): Result<string> {\n  try {\n    return { error: null, value: require.resolve(id, { paths: [dirname] }) };\n  } catch (error) {\n    return { error, value: null };\n  }\n}\n\nasync function tryImportMetaResolve(\n  id: Parameters<ImportMeta[\"resolve\"]>[0],\n  options: Parameters<ImportMeta[\"resolve\"]>[1],\n): Promise<Result<string>> {\n  try {\n    return { error: null, value: await importMetaResolve(id, options) };\n  } catch (error) {\n    return { error, value: null };\n  }\n}\n\nfunction resolveStandardizedNameForRequire(\n  type: \"plugin\" | \"preset\",\n  name: string,\n  dirname: string,\n) {\n  const it = resolveAlternativesHelper(type, name);\n  let res = it.next();\n  while (!res.done) {\n    res = it.next(tryRequireResolve(res.value, { paths: [dirname] }));\n  }\n  return res.value;\n}\nasync function resolveStandardizedNameForImport(\n  type: \"plugin\" | \"preset\",\n  name: string,\n  dirname: string,\n) {\n  const parentUrl = pathToFileURL(\n    path.join(dirname, \"./babel-virtual-resolve-base.js\"),\n  ).href;\n\n  const it = resolveAlternativesHelper(type, name);\n  let res = it.next();\n  while (!res.done) {\n    res = it.next(await tryImportMetaResolve(res.value, parentUrl));\n  }\n  return fileURLToPath(res.value);\n}\n\nconst resolveStandardizedName = gensync<\n  [type: \"plugin\" | \"preset\", name: string, dirname?: string],\n  string\n>({\n  sync(type, name, dirname = process.cwd()) {\n    return resolveStandardizedNameForRequire(type, name, dirname);\n  },\n  async async(type, name, dirname = process.cwd()) {\n    if (!supportsESM) {\n      return resolveStandardizedNameForRequire(type, name, dirname);\n    }\n\n    try {\n      return await resolveStandardizedNameForImport(type, name, dirname);\n    } catch (e) {\n      try {\n        return resolveStandardizedNameForRequire(type, name, dirname);\n      } catch (e2) {\n        if (e.type === \"MODULE_NOT_FOUND\") throw e;\n        if (e2.type === \"MODULE_NOT_FOUND\") throw e2;\n        throw e;\n      }\n    }\n  },\n});\n\nif (!process.env.BABEL_8_BREAKING) {\n  // eslint-disable-next-line no-var\n  var LOADING_MODULES = new Set();\n}\nfunction* requireModule(type: string, name: string): Handler<unknown> {\n  if (!process.env.BABEL_8_BREAKING) {\n    if (!(yield* isAsync()) && LOADING_MODULES.has(name)) {\n      throw new Error(\n        `Reentrant ${type} detected trying to load \"${name}\". This module is not ignored ` +\n          \"and is trying to load itself while compiling itself, leading to a dependency cycle. \" +\n          'We recommend adding it to your \"ignore\" list in your babelrc, or to a .babelignore.',\n      );\n    }\n  }\n\n  try {\n    if (!process.env.BABEL_8_BREAKING) {\n      LOADING_MODULES.add(name);\n    }\n    return yield* loadCjsOrMjsDefault(\n      name,\n      `You appear to be using a native ECMAScript module ${type}, ` +\n        \"which is only supported when running Babel asynchronously.\",\n      // For backward compatibility, we need to support malformed presets\n      // defined as separate named exports rather than a single default\n      // export.\n      // See packages/babel-core/test/fixtures/option-manager/presets/es2015_named.js\n      true,\n    );\n  } catch (err) {\n    err.message = `[BABEL]: ${err.message} (While processing: ${name})`;\n    throw err;\n  } finally {\n    if (!process.env.BABEL_8_BREAKING) {\n      LOADING_MODULES.delete(name);\n    }\n  }\n}\n"],"mappings":"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"}