[{"/Users/simen/repos/jest/packages/jest-util/src/ErrorWithStack.ts":"1","/Users/simen/repos/jest/packages/jest-util/src/__tests__/convertDescriptorToString.test.ts":"2","/Users/simen/repos/jest/packages/jest-util/src/__tests__/createProcessObject.test.ts":"3","/Users/simen/repos/jest/packages/jest-util/src/__tests__/deepCyclicCopy.test.ts":"4","/Users/simen/repos/jest/packages/jest-util/src/__tests__/errorWithStack.test.ts":"5","/Users/simen/repos/jest/packages/jest-util/src/__tests__/formatTime.test.ts":"6","/Users/simen/repos/jest/packages/jest-util/src/__tests__/globsToMatcher.test.ts":"7","/Users/simen/repos/jest/packages/jest-util/src/__tests__/installCommonGlobals.test.ts":"8","/Users/simen/repos/jest/packages/jest-util/src/__tests__/isInteractive.test.ts":"9","/Users/simen/repos/jest/packages/jest-util/src/__tests__/isPromise.test.ts":"10","/Users/simen/repos/jest/packages/jest-util/src/clearLine.ts":"11","/Users/simen/repos/jest/packages/jest-util/src/convertDescriptorToString.ts":"12","/Users/simen/repos/jest/packages/jest-util/src/createDirectory.ts":"13","/Users/simen/repos/jest/packages/jest-util/src/createProcessObject.ts":"14","/Users/simen/repos/jest/packages/jest-util/src/deepCyclicCopy.ts":"15","/Users/simen/repos/jest/packages/jest-util/src/formatTime.ts":"16","/Users/simen/repos/jest/packages/jest-util/src/globsToMatcher.ts":"17","/Users/simen/repos/jest/packages/jest-util/src/index.ts":"18","/Users/simen/repos/jest/packages/jest-util/src/installCommonGlobals.ts":"19","/Users/simen/repos/jest/packages/jest-util/src/interopRequireDefault.ts":"20","/Users/simen/repos/jest/packages/jest-util/src/isInteractive.ts":"21","/Users/simen/repos/jest/packages/jest-util/src/isPromise.ts":"22","/Users/simen/repos/jest/packages/jest-util/src/pluralize.ts":"23","/Users/simen/repos/jest/packages/jest-util/src/preRunMessage.ts":"24","/Users/simen/repos/jest/packages/jest-util/src/replacePathSepForGlob.ts":"25","/Users/simen/repos/jest/packages/jest-util/src/requireOrImportModule.ts":"26","/Users/simen/repos/jest/packages/jest-util/src/setGlobal.ts":"27","/Users/simen/repos/jest/packages/jest-util/src/specialChars.ts":"28","/Users/simen/repos/jest/packages/jest-util/src/testPathPatternToRegExp.ts":"29","/Users/simen/repos/jest/packages/jest-util/src/tryRealpath.ts":"30"},{"size":781,"mtime":1663311355524,"results":"31","hashOfConfig":"32"},{"size":1064,"mtime":1665737657518,"results":"33","hashOfConfig":"32"},{"size":3427,"mtime":1665737657518,"results":"34","hashOfConfig":"32"},{"size":6709,"mtime":1665737657518,"results":"35","hashOfConfig":"32"},{"size":732,"mtime":1650373335000,"results":"36","hashOfConfig":"32"},{"size":1415,"mtime":1662708144237,"results":"37","hashOfConfig":"32"},{"size":2898,"mtime":1662710982180,"results":"38","hashOfConfig":"32"},{"size":1260,"mtime":1665737657518,"results":"39","hashOfConfig":"32"},{"size":2034,"mtime":1663311355525,"results":"40","hashOfConfig":"32"},{"size":837,"mtime":1665737657518,"results":"41","hashOfConfig":"32"},{"size":346,"mtime":1662708144237,"results":"42","hashOfConfig":"32"},{"size":753,"mtime":1663311355525,"results":"43","hashOfConfig":"32"},{"size":439,"mtime":1663311355525,"results":"44","hashOfConfig":"32"},{"size":3302,"mtime":1664535326153,"results":"45","hashOfConfig":"32"},{"size":2192,"mtime":1664535326154,"results":"46","hashOfConfig":"32"},{"size":586,"mtime":1664535326154,"results":"47","hashOfConfig":"32"},{"size":3163,"mtime":1663311355526,"results":"48","hashOfConfig":"32"},{"size":1506,"mtime":1664890032232,"results":"49","hashOfConfig":"32"},{"size":1971,"mtime":1663311355527,"results":"50","hashOfConfig":"32"},{"size":549,"mtime":1662708144239,"results":"51","hashOfConfig":"32"},{"size":321,"mtime":1663311355527,"results":"52","hashOfConfig":"32"},{"size":481,"mtime":1665737657519,"results":"53","hashOfConfig":"32"},{"size":340,"mtime":1662708144239,"results":"54","hashOfConfig":"32"},{"size":597,"mtime":1664535326154,"results":"55","hashOfConfig":"32"},{"size":333,"mtime":1663311355527,"results":"56","hashOfConfig":"32"},{"size":1751,"mtime":1663311355527,"results":"57","hashOfConfig":"32"},{"size":449,"mtime":1663311355527,"results":"58","hashOfConfig":"32"},{"size":522,"mtime":1650373335000,"results":"59","hashOfConfig":"32"},{"size":638,"mtime":1663311355528,"results":"60","hashOfConfig":"32"},{"size":494,"mtime":1665737657519,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"3yne6y",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":34,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":58,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":34,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":13,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":12,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},"/Users/simen/repos/jest/packages/jest-util/src/ErrorWithStack.ts",["171","172"],[],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport default class ErrorWithStack extends Error {\n  constructor(\n    message: string | undefined,\n    callsite: (...args: Array<any>) => unknown,\n    stackLimit?: number,\n  ) {\n    // Ensure we have a large stack length so we get full details.\n    const originalStackLimit = Error.stackTraceLimit;\n    if (stackLimit) {\n      Error.stackTraceLimit = Math.max(stackLimit, originalStackLimit || 10);\n    }\n\n    super(message);\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, callsite);\n    }\n\n    Error.stackTraceLimit = originalStackLimit;\n  }\n}\n","/Users/simen/repos/jest/packages/jest-util/src/__tests__/convertDescriptorToString.test.ts",["173"],[],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport convertDescriptorToString from '../convertDescriptorToString';\n\ndescribe(convertDescriptorToString, () => {\n  test.each([\n    [undefined, 'undefined'],\n    ['name', 'name'],\n    [123, '123'],\n    [function named() {}, 'named'],\n    [class Named {}, 'Named'],\n  ])('%p', (input, output) => {\n    expect(convertDescriptorToString(input)).toBe(output);\n  });\n\n  test.each([\n    ['null', null],\n    ['array', ['abc']],\n    ['object', {abc: 'def'}],\n    ['anonymous function expression', function () {}],\n    ['anonymous arrow function', () => {}],\n    ['anonymous class expression', class {}],\n  ])('%s', (_, input) => {\n    expect(() => {\n      // @ts-expect-error\n      return convertDescriptorToString(input);\n    }).toThrow(\n      `Invalid first argument, ${input}. It must be a named class, named function, number, or string.`,\n    );\n  });\n});\n","/Users/simen/repos/jest/packages/jest-util/src/__tests__/createProcessObject.test.ts",["174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207"],[],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {EventEmitter} from 'events';\n\nlet createProcessObject;\n\nfunction requireCreateProcessObject() {\n  jest.isolateModules(() => {\n    createProcessObject = require('../createProcessObject').default;\n  });\n}\n\nit('creates a process object that looks like the original one', () => {\n  requireCreateProcessObject();\n  const fakeProcess = createProcessObject();\n\n  // \"process\" inherits from EventEmitter through the prototype chain.\n  expect(fakeProcess instanceof EventEmitter).toBe(true);\n\n  // They look the same, but they are NOT the same (deep copied object). The\n  // \"_events\" property is checked to ensure event emitter properties are\n  // properly copied.\n  ['argv', 'env', '_events'].forEach(key => {\n    // @ts-expect-error\n    expect(fakeProcess[key]).toEqual(process[key]);\n    // @ts-expect-error\n    expect(fakeProcess[key]).not.toBe(process[key]);\n  });\n\n  // Check that process.stdout/stderr are the same.\n  expect(process.stdout).toBe(fakeProcess.stdout);\n  expect(process.stderr).toBe(fakeProcess.stderr);\n});\n\nit('fakes require(\"process\") so it is equal to \"global.process\"', () => {\n  expect(require('process') === process).toBe(true);\n});\n\nit('checks that process.env works as expected on Linux platforms', () => {\n  Object.defineProperty(process, 'platform', {get: () => 'linux'});\n  requireCreateProcessObject();\n\n  // Existing properties inside process.env are copied to the fake environment.\n  process.env.PROP_STRING = 'foo';\n  // @ts-expect-error\n  process.env.PROP_NUMBER = 3;\n  process.env.PROP_UNDEFINED = undefined;\n\n  const fake = createProcessObject().env;\n\n  // All values converted to strings.\n  expect(fake.PROP_STRING).toBe('foo');\n  expect(fake.PROP_NUMBER).toBe('3');\n  expect(fake.PROP_UNDEFINED).toBe('undefined');\n\n  // Mac and Linux are case sensitive.\n  expect(fake.PROP_string).toBeUndefined();\n\n  // Added properties to the fake object are not added to the real one.\n  fake.PROP_ADDED = 'new!';\n\n  expect(fake.PROP_ADDED).toBe('new!');\n  expect(process.env.PROP_ADDED).toBeUndefined();\n\n  // You can delete properties, but they are case sensitive!\n  fake.prop = 'foo';\n  fake.PROP = 'bar';\n\n  expect(fake.prop).toBe('foo');\n  expect(fake.PROP).toBe('bar');\n\n  delete fake.PROP;\n\n  expect(fake.prop).toBe('foo');\n  expect(fake.PROP).toBeUndefined();\n});\n\nit('checks that process.env works as expected in Windows platforms', () => {\n  Object.defineProperty(process, 'platform', {get: () => 'win32'});\n  requireCreateProcessObject();\n\n  // Windows is not case sensitive when it comes to property names.\n  process.env.PROP_STRING = 'foo';\n\n  const fake = createProcessObject().env;\n\n  expect(fake.PROP_STRING).toBe('foo');\n  expect(fake.PROP_string).toBe('foo');\n\n  // Inherited methods, however, are not affected by case insensitiveness.\n  expect(typeof fake.toString).toBe('function');\n  expect(typeof fake.valueOf).toBe('function');\n\n  expect(typeof fake.tostring).toBe('undefined');\n  expect(typeof fake.valueof).toBe('undefined');\n\n  // You can delete through case-insensitiveness too.\n  delete fake.prop_string;\n\n  expect(Object.prototype.hasOwnProperty.call('PROP_string')).toBe(false);\n  expect(Object.prototype.hasOwnProperty.call('PROP_string')).toBe(false);\n});\n","/Users/simen/repos/jest/packages/jest-util/src/__tests__/deepCyclicCopy.test.ts",["208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265"],[],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport deepCyclicCopy from '../deepCyclicCopy';\n\nit('returns the same value for primitive or function values', () => {\n  const fn = () => {};\n\n  expect(deepCyclicCopy(undefined)).toBeUndefined();\n  expect(deepCyclicCopy(null)).toBeNull();\n  expect(deepCyclicCopy(true)).toBe(true);\n  expect(deepCyclicCopy(42)).toBe(42);\n  expect(Number.isNaN(deepCyclicCopy(NaN))).toBe(true);\n  expect(deepCyclicCopy('foo')).toBe('foo');\n  expect(deepCyclicCopy(fn)).toBe(fn);\n});\n\nit('does not execute getters/setters, but copies them', () => {\n  const fn = jest.fn();\n  const obj = {\n    // @ts-expect-error\n    get foo() {\n      fn();\n    },\n  };\n  const copy = deepCyclicCopy(obj);\n\n  expect(Object.getOwnPropertyDescriptor(copy, 'foo')).toBeDefined();\n  expect(fn).not.toHaveBeenCalled();\n});\n\nit('copies symbols', () => {\n  const symbol = Symbol('foo');\n  const obj = {[symbol]: 42};\n\n  expect(deepCyclicCopy(obj)[symbol]).toBe(42);\n});\n\nit('copies arrays as array objects', () => {\n  const array = [null, 42, 'foo', 'bar', [], {}];\n\n  expect(deepCyclicCopy(array)).toEqual(array);\n  expect(Array.isArray(deepCyclicCopy(array))).toBe(true);\n});\n\nit('handles cyclic dependencies', () => {\n  const cyclic: any = {a: 42, subcycle: {}};\n\n  cyclic.subcycle.baz = cyclic;\n  cyclic.bar = cyclic;\n\n  expect(() => deepCyclicCopy(cyclic)).not.toThrow();\n\n  const copy = deepCyclicCopy(cyclic);\n\n  expect(copy.a).toBe(42);\n  expect(copy.bar).toEqual(copy);\n  expect(copy.subcycle.baz).toEqual(copy);\n});\n\nit('uses the blacklist to avoid copying properties on the first level', () => {\n  const obj = {\n    blacklisted: 41,\n    blacklisted2: 42,\n    subObj: {\n      blacklisted: 43,\n    },\n  };\n\n  expect(\n    deepCyclicCopy(obj, {\n      blacklist: new Set(['blacklisted', 'blacklisted2']),\n    }),\n  ).toEqual({\n    subObj: {\n      blacklisted: 43,\n    },\n  });\n});\n\nit('does not keep the prototype by default when top level is object', () => {\n  // @ts-expect-error\n  const sourceObject = new (function () {})();\n  // @ts-expect-error\n  sourceObject.nestedObject = new (function () {})();\n  // @ts-expect-error\n  sourceObject.nestedArray = new (function () {\n    // @ts-expect-error\n    this.length = 0;\n  })();\n\n  const spy = jest\n    .spyOn(Array, 'isArray')\n    .mockImplementation(object => object === sourceObject.nestedArray);\n\n  const copy = deepCyclicCopy(sourceObject, {keepPrototype: false});\n\n  expect(Object.getPrototypeOf(copy)).not.toBe(\n    Object.getPrototypeOf(sourceObject),\n  );\n  expect(Object.getPrototypeOf(copy.nestedObject)).not.toBe(\n    Object.getPrototypeOf(sourceObject.nestedObject),\n  );\n  expect(Object.getPrototypeOf(copy.nestedArray)).not.toBe(\n    Object.getPrototypeOf(sourceObject.nestedArray),\n  );\n\n  expect(Object.getPrototypeOf(copy)).toBe(Object.getPrototypeOf({}));\n  expect(Object.getPrototypeOf(copy.nestedObject)).toBe(\n    Object.getPrototypeOf({}),\n  );\n  expect(Object.getPrototypeOf(copy.nestedArray)).toBe(\n    Object.getPrototypeOf([]),\n  );\n\n  spy.mockRestore();\n});\n\nit('does not keep the prototype by default when top level is array', () => {\n  const spy = jest.spyOn(Array, 'isArray').mockImplementation(() => true);\n\n  // @ts-expect-error\n  const sourceArray = new (function () {\n    // @ts-expect-error\n    this.length = 0;\n  })();\n\n  const copy = deepCyclicCopy(sourceArray);\n  expect(Object.getPrototypeOf(copy)).not.toBe(\n    Object.getPrototypeOf(sourceArray),\n  );\n\n  expect(Object.getPrototypeOf(copy)).toBe(Object.getPrototypeOf([]));\n  spy.mockRestore();\n});\n\nit('does not keep the prototype of arrays when keepPrototype = false', () => {\n  const spy = jest.spyOn(Array, 'isArray').mockImplementation(() => true);\n\n  // @ts-expect-error\n  const sourceArray = new (function () {\n    // @ts-expect-error\n    this.length = 0;\n  })();\n\n  const copy = deepCyclicCopy(sourceArray, {keepPrototype: false});\n  expect(Object.getPrototypeOf(copy)).not.toBe(\n    Object.getPrototypeOf(sourceArray),\n  );\n\n  expect(Object.getPrototypeOf(copy)).toBe(Object.getPrototypeOf([]));\n  spy.mockRestore();\n});\n\nit('keeps the prototype of arrays when keepPrototype = true', () => {\n  const spy = jest.spyOn(Array, 'isArray').mockImplementation(() => true);\n\n  // @ts-expect-error\n  const sourceArray = new (function () {\n    // @ts-expect-error\n    this.length = 0;\n  })();\n\n  const copy = deepCyclicCopy(sourceArray, {keepPrototype: true});\n  expect(Object.getPrototypeOf(copy)).toBe(Object.getPrototypeOf(sourceArray));\n\n  spy.mockRestore();\n});\n\nit('does not keep the prototype for objects when keepPrototype = false', () => {\n  // @ts-expect-error\n  const sourceobject = new (function () {})();\n  // @ts-expect-error\n  sourceobject.nestedObject = new (function () {})();\n  // @ts-expect-error\n  sourceobject.nestedArray = new (function () {\n    // @ts-expect-error\n    this.length = 0;\n  })();\n\n  const spy = jest\n    .spyOn(Array, 'isArray')\n    .mockImplementation(object => object === sourceobject.nestedArray);\n\n  const copy = deepCyclicCopy(sourceobject, {keepPrototype: false});\n\n  expect(Object.getPrototypeOf(copy)).not.toBe(\n    Object.getPrototypeOf(sourceobject),\n  );\n  expect(Object.getPrototypeOf(copy.nestedObject)).not.toBe(\n    Object.getPrototypeOf(sourceobject.nestedObject),\n  );\n  expect(Object.getPrototypeOf(copy.nestedArray)).not.toBe(\n    Object.getPrototypeOf(sourceobject.nestedArray),\n  );\n  expect(Object.getPrototypeOf(copy)).toBe(Object.getPrototypeOf({}));\n  expect(Object.getPrototypeOf(copy.nestedObject)).toBe(\n    Object.getPrototypeOf({}),\n  );\n  expect(Object.getPrototypeOf(copy.nestedArray)).toBe(\n    Object.getPrototypeOf([]),\n  );\n\n  spy.mockRestore();\n});\n\nit('keeps the prototype for objects when keepPrototype = true', () => {\n  // @ts-expect-error\n  const sourceObject = new (function () {})();\n  // @ts-expect-error\n  sourceObject.nestedObject = new (function () {})();\n  // @ts-expect-error\n  sourceObject.nestedArray = new (function () {\n    // @ts-expect-error\n    this.length = 0;\n  })();\n\n  const spy = jest\n    .spyOn(Array, 'isArray')\n    .mockImplementation(object => object === sourceObject.nestedArray);\n\n  const copy = deepCyclicCopy(sourceObject, {keepPrototype: true});\n\n  expect(Object.getPrototypeOf(copy)).toBe(Object.getPrototypeOf(sourceObject));\n  expect(Object.getPrototypeOf(copy.nestedObject)).toBe(\n    Object.getPrototypeOf(sourceObject.nestedObject),\n  );\n  expect(Object.getPrototypeOf(copy.nestedArray)).toBe(\n    Object.getPrototypeOf(sourceObject.nestedArray),\n  );\n  spy.mockRestore();\n});\n","/Users/simen/repos/jest/packages/jest-util/src/__tests__/errorWithStack.test.ts",[],[],["266","267"],"/Users/simen/repos/jest/packages/jest-util/src/__tests__/formatTime.test.ts",[],[],"/Users/simen/repos/jest/packages/jest-util/src/__tests__/globsToMatcher.test.ts",["268"],[],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport micromatch = require('micromatch');\nimport globsToMatcher from '../globsToMatcher';\n\nit('works like micromatch with only positive globs', () => {\n  const globs = ['**/*.test.js', '**/*.test.jsx'];\n  const matcher = globsToMatcher(globs);\n\n  expect(matcher('some-module.js')).toBe(\n    micromatch(['some-module.js'], globs).length > 0,\n  );\n\n  expect(matcher('some-module.test.js')).toBe(\n    micromatch(['some-module.test.js'], globs).length > 0,\n  );\n});\n\nit('works like micromatch with a mix of overlapping positive and negative globs', () => {\n  const globs = ['**/*.js', '!**/*.test.js', '**/*.test.js'];\n  const matcher = globsToMatcher(globs);\n\n  expect(matcher('some-module.js')).toBe(\n    micromatch(['some-module.js'], globs).length > 0,\n  );\n\n  expect(matcher('some-module.test.js')).toBe(\n    micromatch(['some-module.test.js'], globs).length > 0,\n  );\n\n  const globs2 = ['**/*.js', '!**/*.test.js', '**/*.test.js', '!**/*.test.js'];\n  const matcher2 = globsToMatcher(globs2);\n\n  expect(matcher2('some-module.js')).toBe(\n    micromatch(['some-module.js'], globs2).length > 0,\n  );\n\n  expect(matcher2('some-module.test.js')).toBe(\n    micromatch(['some-module.test.js'], globs2).length > 0,\n  );\n});\n\nit('works like micromatch with only negative globs', () => {\n  const globs = ['!**/*.test.js', '!**/*.test.jsx'];\n  const matcher = globsToMatcher(globs);\n\n  expect(matcher('some-module.js')).toBe(\n    micromatch(['some-module.js'], globs).length > 0,\n  );\n\n  expect(matcher('some-module.test.js')).toBe(\n    micromatch(['some-module.test.js'], globs).length > 0,\n  );\n});\n\nit('works like micromatch with empty globs', () => {\n  const globs = [];\n  const matcher = globsToMatcher(globs);\n\n  expect(matcher('some-module.js')).toBe(\n    micromatch(['some-module.js'], globs).length > 0,\n  );\n\n  expect(matcher('some-module.test.js')).toBe(\n    micromatch(['some-module.test.js'], globs).length > 0,\n  );\n});\n\nit('works like micromatch with pure negated extglobs', () => {\n  const globs = ['**/*.js', '!(some-module.test.js)'];\n  const matcher = globsToMatcher(globs);\n\n  expect(matcher('some-module.js')).toBe(\n    micromatch(['some-module.js'], globs).length > 0,\n  );\n\n  expect(matcher('some-module.test.js')).toBe(\n    micromatch(['some-module.test.js'], globs).length > 0,\n  );\n});\n\nit('works like micromatch with negated extglobs', () => {\n  const globs = ['**/*.js', '!(tests|coverage)/*.js'];\n  const matcher = globsToMatcher(globs);\n\n  expect(matcher('some-module.js')).toBe(\n    micromatch(['some-module.js'], globs).length > 0,\n  );\n\n  expect(matcher('tests/some-module.test.js')).toBe(\n    micromatch(['tests/some-module.test.js'], globs).length > 0,\n  );\n});\n","/Users/simen/repos/jest/packages/jest-util/src/__tests__/installCommonGlobals.test.ts",["269","270","271"],[],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {createContext, runInContext} from 'vm';\n\ndeclare global {\n  function DTRACE_NET_SERVER_CONNECTION(): unknown;\n}\n\nconst fake = jest.fn();\nglobalThis.DTRACE_NET_SERVER_CONNECTION = fake;\n\nlet installCommonGlobals: typeof import('../installCommonGlobals').default;\n\nfunction getGlobal(): typeof globalThis {\n  return runInContext('this', createContext());\n}\n\nbeforeEach(() => {\n  installCommonGlobals = require('../installCommonGlobals').default;\n});\n\nafterEach(() => {\n  jest.clearAllMocks();\n  jest.resetModules();\n});\n\nit('returns the passed object', () => {\n  const myGlobal = getGlobal();\n\n  expect(installCommonGlobals(myGlobal, {})).toBe(myGlobal);\n});\n\nit('turns a V8 global object into a Node global object', () => {\n  const myGlobal = installCommonGlobals(getGlobal(), {});\n\n  expect(myGlobal.process).toBeDefined();\n  expect(myGlobal.DTRACE_NET_SERVER_CONNECTION).toBeDefined();\n  expect(myGlobal.DTRACE_NET_SERVER_CONNECTION).not.toBe(fake);\n\n  myGlobal.DTRACE_NET_SERVER_CONNECTION();\n\n  expect(fake).toHaveBeenCalledTimes(1);\n});\n","/Users/simen/repos/jest/packages/jest-util/src/__tests__/isInteractive.test.ts",["272","273","274","275","276","277","278","279","280","281"],[],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet oldIsTTY: typeof process.stdout.isTTY;\nlet oldTERM: string | undefined;\n\nbeforeEach(() => {\n  oldIsTTY = process.stdout.isTTY;\n  oldTERM = process.env.TERM;\n});\n\nafterEach(() => {\n  process.stdout.isTTY = oldIsTTY;\n  process.env.TERM = oldTERM;\n  jest.resetModules();\n});\n\nit('Returns true when running on interactive environment', () => {\n  jest.doMock('ci-info', () => ({isCI: false}));\n  process.stdout.isTTY = true;\n  process.env.TERM = 'xterm-256color';\n\n  const isInteractive = require('../isInteractive').default;\n  expect(isInteractive).toBe(true);\n});\n\nit('Returns false when running on a non-interactive environment', () => {\n  let isInteractive;\n  const expectedResult = false;\n\n  // Test with isCI being true and isTTY false\n  jest.doMock('ci-info', () => ({isCI: true}));\n  process.stdout.isTTY = undefined;\n  process.env.TERM = 'xterm-256color';\n  isInteractive = require('../isInteractive').default;\n  expect(isInteractive).toBe(expectedResult);\n\n  // Test with isCI being false and isTTY false\n  jest.resetModules();\n  jest.doMock('ci-info', () => ({isCI: false}));\n  process.stdout.isTTY = undefined;\n  process.env.TERM = 'xterm-256color';\n  isInteractive = require('../isInteractive').default;\n  expect(isInteractive).toBe(expectedResult);\n\n  // Test with isCI being true and isTTY true\n  jest.resetModules();\n  jest.doMock('ci-info', () => ({isCI: true}));\n  process.stdout.isTTY = true;\n  process.env.TERM = 'xterm-256color';\n  isInteractive = require('../isInteractive').default;\n  expect(isInteractive).toBe(expectedResult);\n\n  // Test with dumb terminal\n  jest.resetModules();\n  jest.doMock('ci-info', () => ({isCI: false}));\n  process.stdout.isTTY = undefined;\n  process.env.TERM = 'dumb';\n  isInteractive = require('../isInteractive').default;\n  expect(isInteractive).toBe(expectedResult);\n});\n","/Users/simen/repos/jest/packages/jest-util/src/__tests__/isPromise.test.ts",[],[],"/Users/simen/repos/jest/packages/jest-util/src/clearLine.ts",[],[],["282","283"],"/Users/simen/repos/jest/packages/jest-util/src/convertDescriptorToString.ts",["284","285","286"],[],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {Global} from '@jest/types';\n\nexport default function convertDescriptorToString(\n  descriptor: Global.BlockNameLike | undefined,\n): string {\n  switch (typeof descriptor) {\n    case 'function':\n      if (descriptor.name) {\n        return descriptor.name;\n      }\n      break;\n\n    case 'number':\n    case 'undefined':\n      return `${descriptor}`;\n\n    case 'string':\n      return descriptor;\n  }\n\n  throw new Error(\n    `Invalid first argument, ${descriptor}. It must be a named class, named function, number, or string.`,\n  );\n}\n","/Users/simen/repos/jest/packages/jest-util/src/createDirectory.ts",["287"],[],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as fs from 'graceful-fs';\n\nexport default function createDirectory(path: string): void {\n  try {\n    fs.mkdirSync(path, {recursive: true});\n  } catch (e: any) {\n    if (e.code !== 'EEXIST') {\n      throw e;\n    }\n  }\n}\n","/Users/simen/repos/jest/packages/jest-util/src/createProcessObject.ts",["288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321"],[],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport deepCyclicCopy from './deepCyclicCopy';\n\nconst BLACKLIST = new Set(['env', 'mainModule', '_events']);\nconst isWin32 = process.platform === 'win32';\nconst proto: Record<string, unknown> = Object.getPrototypeOf(process.env);\n\n// The \"process.env\" object has a bunch of particularities: first, it does not\n// directly extend from Object; second, it converts any assigned value to a\n// string; and third, it is case-insensitive in Windows. We use a proxy here to\n// mimic it (see https://nodejs.org/api/process.html#process_process_env).\n\nfunction createProcessEnv(): NodeJS.ProcessEnv {\n  const real = Object.create(proto);\n  const lookup: typeof process.env = {};\n\n  function deletePropertyWin32(_target: unknown, key: unknown) {\n    for (const name in real) {\n      if (Object.prototype.hasOwnProperty.call(real, name)) {\n        if (typeof key === 'string') {\n          if (name.toLowerCase() === key.toLowerCase()) {\n            delete real[name];\n            delete lookup[name.toLowerCase()];\n          }\n        } else {\n          if (key === name) {\n            delete real[name];\n            delete lookup[name];\n          }\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function deleteProperty(_target: unknown, key: any) {\n    delete real[key];\n    delete lookup[key];\n\n    return true;\n  }\n\n  function getProperty(_target: unknown, key: any) {\n    return real[key];\n  }\n\n  function getPropertyWin32(_target: unknown, key: any) {\n    if (typeof key === 'string') {\n      return lookup[key in proto ? key : key.toLowerCase()];\n    } else {\n      return real[key];\n    }\n  }\n\n  const proxy = new Proxy(real, {\n    deleteProperty: isWin32 ? deletePropertyWin32 : deleteProperty,\n    get: isWin32 ? getPropertyWin32 : getProperty,\n\n    set(_target, key, value) {\n      const strValue = `${value}`;\n\n      if (typeof key === 'string') {\n        lookup[key.toLowerCase()] = strValue;\n      }\n\n      real[key] = strValue;\n\n      return true;\n    },\n  });\n\n  return Object.assign(proxy, process.env);\n}\n\nexport default function createProcessObject(): NodeJS.Process {\n  const process = require('process');\n  const newProcess = deepCyclicCopy(process, {\n    blacklist: BLACKLIST,\n    keepPrototype: true,\n  });\n\n  try {\n    // This fails on Node 12, but it's already set to 'process'\n    newProcess[Symbol.toStringTag] = 'process';\n  } catch (e: any) {\n    // Make sure it's actually set instead of potentially ignoring errors\n    if (newProcess[Symbol.toStringTag] !== 'process') {\n      e.message = `Unable to set toStringTag on process. Please open up an issue at https://github.com/facebook/jest\\n\\n${e.message}`;\n\n      throw e;\n    }\n  }\n\n  // Sequentially execute all constructors over the object.\n  let proto = process;\n\n  while ((proto = Object.getPrototypeOf(proto))) {\n    if (typeof proto.constructor === 'function') {\n      proto.constructor.call(newProcess);\n    }\n  }\n\n  newProcess.env = createProcessEnv();\n  newProcess.send = () => true;\n\n  Object.defineProperty(newProcess, 'domain', {\n    get() {\n      return process.domain;\n    },\n  });\n\n  return newProcess;\n}\n","/Users/simen/repos/jest/packages/jest-util/src/deepCyclicCopy.ts",["322","323","324","325","326","327","328","329","330","331","332","333","334"],[],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst EMPTY = new Set<string>();\n\nexport type DeepCyclicCopyOptions = {\n  blacklist?: Set<string>;\n  keepPrototype?: boolean;\n};\n\nexport default function deepCyclicCopy<T>(\n  value: T,\n  options: DeepCyclicCopyOptions = {blacklist: EMPTY, keepPrototype: false},\n  cycles: WeakMap<any, any> = new WeakMap(),\n): T {\n  if (typeof value !== 'object' || value === null || Buffer.isBuffer(value)) {\n    return value;\n  } else if (cycles.has(value)) {\n    return cycles.get(value);\n  } else if (Array.isArray(value)) {\n    return deepCyclicCopyArray(value, options, cycles);\n  } else {\n    return deepCyclicCopyObject(value, options, cycles);\n  }\n}\n\nfunction deepCyclicCopyObject<T>(\n  object: T,\n  options: DeepCyclicCopyOptions,\n  cycles: WeakMap<any, any>,\n): T {\n  const newObject = options.keepPrototype\n    ? Object.create(Object.getPrototypeOf(object))\n    : {};\n\n  const descriptors = Object.getOwnPropertyDescriptors(object);\n\n  cycles.set(object, newObject);\n\n  Object.keys(descriptors).forEach(key => {\n    if (options.blacklist && options.blacklist.has(key)) {\n      delete descriptors[key];\n      return;\n    }\n\n    const descriptor = descriptors[key];\n    if (typeof descriptor.value !== 'undefined') {\n      descriptor.value = deepCyclicCopy(\n        descriptor.value,\n        {blacklist: EMPTY, keepPrototype: options.keepPrototype},\n        cycles,\n      );\n    }\n\n    descriptor.configurable = true;\n  });\n\n  return Object.defineProperties(newObject, descriptors);\n}\n\nfunction deepCyclicCopyArray<T>(\n  array: Array<T>,\n  options: DeepCyclicCopyOptions,\n  cycles: WeakMap<any, any>,\n): T {\n  const newArray = options.keepPrototype\n    ? new (Object.getPrototypeOf(array).constructor)(array.length)\n    : [];\n  const length = array.length;\n\n  cycles.set(array, newArray);\n\n  for (let i = 0; i < length; i++) {\n    newArray[i] = deepCyclicCopy(\n      array[i],\n      {blacklist: EMPTY, keepPrototype: options.keepPrototype},\n      cycles,\n    );\n  }\n\n  return newArray;\n}\n","/Users/simen/repos/jest/packages/jest-util/src/formatTime.ts",[],[],"/Users/simen/repos/jest/packages/jest-util/src/globsToMatcher.ts",["335","336"],[],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport picomatch = require('picomatch');\nimport replacePathSepForGlob from './replacePathSepForGlob';\n\ntype Matcher = (str: string) => boolean;\n\nconst globsToMatchersMap = new Map<\n  string,\n  {isMatch: Matcher; negated: boolean}\n>();\n\nconst picomatchOptions = {dot: true};\n\n/**\n * Converts a list of globs into a function that matches a path against the\n * globs.\n *\n * Every time picomatch is called, it will parse the glob strings and turn\n * them into regexp instances. Instead of calling picomatch repeatedly with\n * the same globs, we can use this function which will build the picomatch\n * matchers ahead of time and then have an optimized path for determining\n * whether an individual path matches.\n *\n * This function is intended to match the behavior of `micromatch()`.\n *\n * @example\n * const isMatch = globsToMatcher(['*.js', '!*.test.js']);\n * isMatch('pizza.js'); // true\n * isMatch('pizza.test.js'); // false\n */\nexport default function globsToMatcher(globs: Array<string>): Matcher {\n  if (globs.length === 0) {\n    // Since there were no globs given, we can simply have a fast path here and\n    // return with a very simple function.\n    return () => false;\n  }\n\n  const matchers = globs.map(glob => {\n    if (!globsToMatchersMap.has(glob)) {\n      const isMatch = picomatch(glob, picomatchOptions, true);\n\n      const matcher = {\n        isMatch,\n        // Matchers that are negated have different behavior than matchers that\n        // are not negated, so we need to store this information ahead of time.\n        negated: isMatch.state.negated || !!isMatch.state.negatedExtglob,\n      };\n\n      globsToMatchersMap.set(glob, matcher);\n    }\n\n    return globsToMatchersMap.get(glob)!;\n  });\n\n  return path => {\n    const replacedPath = replacePathSepForGlob(path);\n    let kept = undefined;\n    let negatives = 0;\n\n    for (let i = 0; i < matchers.length; i++) {\n      const {isMatch, negated} = matchers[i];\n\n      if (negated) {\n        negatives++;\n      }\n\n      const matched = isMatch(replacedPath);\n\n      if (!matched && negated) {\n        // The path was not matched, and the matcher is a negated matcher, so we\n        // want to omit the path. This means that the negative matcher is\n        // filtering the path out.\n        kept = false;\n      } else if (matched && !negated) {\n        // The path was matched, and the matcher is not a negated matcher, so we\n        // want to keep the path.\n        kept = true;\n      }\n    }\n\n    // If all of the globs were negative globs, then we want to include the path\n    // as long as it was not explicitly not kept. Otherwise only include\n    // the path if it was kept. This allows sets of globs that are all negated\n    // to allow some paths to be matched, while sets of globs that are mixed\n    // negated and non-negated to cause the negated matchers to only omit paths\n    // and not keep them.\n    return negatives === matchers.length ? kept !== false : !!kept;\n  };\n}\n","/Users/simen/repos/jest/packages/jest-util/src/index.ts",[],[],"/Users/simen/repos/jest/packages/jest-util/src/installCommonGlobals.ts",["337","338","339"],[],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as fs from 'graceful-fs';\nimport type {Config} from '@jest/types';\nimport createProcessObject from './createProcessObject';\nimport deepCyclicCopy from './deepCyclicCopy';\n\nconst DTRACE = Object.keys(globalThis).filter(key => key.startsWith('DTRACE'));\n\nexport default function installCommonGlobals(\n  globalObject: typeof globalThis,\n  globals: Config.ConfigGlobals,\n): typeof globalThis & Config.ConfigGlobals {\n  globalObject.process = createProcessObject();\n\n  const symbol = globalObject.Symbol as unknown as SymbolConstructor;\n  // Keep a reference to some globals that Jest needs\n  Object.defineProperties(globalObject, {\n    [symbol.for('jest-native-promise')]: {\n      enumerable: false,\n      value: Promise,\n      writable: false,\n    },\n    [symbol.for('jest-native-now')]: {\n      enumerable: false,\n      value: globalObject.Date.now.bind(globalObject.Date),\n      writable: false,\n    },\n    [symbol.for('jest-native-read-file')]: {\n      enumerable: false,\n      value: fs.readFileSync.bind(fs),\n      writable: false,\n    },\n    [symbol.for('jest-native-write-file')]: {\n      enumerable: false,\n      value: fs.writeFileSync.bind(fs),\n      writable: false,\n    },\n    [symbol.for('jest-native-exists-file')]: {\n      enumerable: false,\n      value: fs.existsSync.bind(fs),\n      writable: false,\n    },\n    'jest-symbol-do-not-touch': {\n      enumerable: false,\n      value: symbol,\n      writable: false,\n    },\n  });\n\n  // Forward some APIs.\n  DTRACE.forEach(dtrace => {\n    // @ts-expect-error: no index\n    globalObject[dtrace] = function (...args: Array<any>) {\n      // @ts-expect-error: no index\n      return globalThis[dtrace].apply(this, args);\n    };\n  });\n\n  return Object.assign(globalObject, deepCyclicCopy(globals));\n}\n","/Users/simen/repos/jest/packages/jest-util/src/interopRequireDefault.ts",["340","341","342","343"],["344"],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// copied from https://github.com/babel/babel/blob/56044c7851d583d498f919e9546caddf8f80a72f/packages/babel-helpers/src/helpers.js#L558-L562\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default function interopRequireDefault(obj: any): any {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n","/Users/simen/repos/jest/packages/jest-util/src/isInteractive.ts",[],[],"/Users/simen/repos/jest/packages/jest-util/src/isPromise.ts",["345"],[],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport default function isPromise<T = unknown>(\n  candidate: unknown,\n): candidate is PromiseLike<T> {\n  return (\n    candidate != null &&\n    (typeof candidate === 'object' || typeof candidate === 'function') &&\n    typeof (candidate as any).then === 'function'\n  );\n}\n","/Users/simen/repos/jest/packages/jest-util/src/pluralize.ts",[],[],"/Users/simen/repos/jest/packages/jest-util/src/preRunMessage.ts",[],[],"/Users/simen/repos/jest/packages/jest-util/src/replacePathSepForGlob.ts",[],[],"/Users/simen/repos/jest/packages/jest-util/src/requireOrImportModule.ts",["346","347","348","349","350","351","352","353","354","355","356","357"],[],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {isAbsolute} from 'path';\nimport {pathToFileURL} from 'url';\nimport interopRequireDefault from './interopRequireDefault';\n\nexport default async function requireOrImportModule<T>(\n  filePath: string,\n  applyInteropRequireDefault = true,\n): Promise<T> {\n  if (!isAbsolute(filePath) && filePath[0] === '.') {\n    throw new Error(\n      `Jest: requireOrImportModule path must be absolute, was \"${filePath}\"`,\n    );\n  }\n  try {\n    const requiredModule = require(filePath);\n    if (!applyInteropRequireDefault) {\n      return requiredModule;\n    }\n    return interopRequireDefault(requiredModule).default;\n  } catch (error: any) {\n    if (error.code === 'ERR_REQUIRE_ESM') {\n      try {\n        const moduleUrl = pathToFileURL(filePath);\n\n        // node `import()` supports URL, but TypeScript doesn't know that\n        const importedModule = await import(moduleUrl.href);\n\n        if (!applyInteropRequireDefault) {\n          return importedModule;\n        }\n\n        if (!importedModule.default) {\n          throw new Error(\n            `Jest: Failed to load ESM at ${filePath} - did you use a default export?`,\n          );\n        }\n\n        return importedModule.default;\n      } catch (innerError: any) {\n        if (innerError.message === 'Not supported') {\n          throw new Error(\n            `Jest: Your version of Node does not support dynamic import - please enable it or use a .cjs file extension for file ${filePath}`,\n          );\n        }\n        throw innerError;\n      }\n    } else {\n      throw error;\n    }\n  }\n}\n","/Users/simen/repos/jest/packages/jest-util/src/setGlobal.ts",[],[],"/Users/simen/repos/jest/packages/jest-util/src/specialChars.ts",[],[],"/Users/simen/repos/jest/packages/jest-util/src/testPathPatternToRegExp.ts",[],[],"/Users/simen/repos/jest/packages/jest-util/src/tryRealpath.ts",["358","359"],[],"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {realpathSync} from 'graceful-fs';\n\nexport default function tryRealpath(path: string): string {\n  try {\n    path = realpathSync.native(path);\n  } catch (error: any) {\n    if (error.code !== 'ENOENT' && error.code !== 'EISDIR') {\n      throw error;\n    }\n  }\n\n  return path;\n}\n",{"ruleId":"360","severity":2,"message":"361","line":16,"column":9,"nodeType":"362","messageId":"363","endLine":16,"endColumn":19,"suggestions":"364"},{"ruleId":"360","severity":2,"message":"365","line":21,"column":9,"nodeType":"366","messageId":"367","endLine":21,"endColumn":32},{"ruleId":"368","severity":2,"message":"369","line":33,"column":34,"nodeType":"362","messageId":"370","endLine":33,"endColumn":39},{"ruleId":"371","severity":2,"message":"372","line":14,"column":5,"nodeType":"373","messageId":"374","endLine":14,"endColumn":68},{"ruleId":"375","severity":2,"message":"376","line":14,"column":27,"nodeType":"366","messageId":"377","endLine":14,"endColumn":68},{"ruleId":"371","severity":2,"message":"372","line":20,"column":9,"nodeType":"378","messageId":"374","endLine":20,"endColumn":44},{"ruleId":"379","severity":2,"message":"380","line":20,"column":23,"nodeType":"362","messageId":"381","endLine":20,"endColumn":42},{"ruleId":"375","severity":2,"message":"382","line":30,"column":12,"nodeType":"366","messageId":"377","endLine":30,"endColumn":28},{"ruleId":"375","severity":2,"message":"382","line":32,"column":12,"nodeType":"366","messageId":"377","endLine":32,"endColumn":28},{"ruleId":"375","severity":2,"message":"383","line":36,"column":31,"nodeType":"366","messageId":"377","endLine":36,"endColumn":49},{"ruleId":"375","severity":2,"message":"384","line":37,"column":31,"nodeType":"366","messageId":"377","endLine":37,"endColumn":49},{"ruleId":"371","severity":2,"message":"372","line":54,"column":9,"nodeType":"378","messageId":"374","endLine":54,"endColumn":41},{"ruleId":"375","severity":2,"message":"385","line":54,"column":16,"nodeType":"366","messageId":"377","endLine":54,"endColumn":41},{"ruleId":"379","severity":2,"message":"380","line":54,"column":16,"nodeType":"362","messageId":"381","endLine":54,"endColumn":35},{"ruleId":"375","severity":2,"message":"386","line":57,"column":10,"nodeType":"366","messageId":"377","endLine":57,"endColumn":26},{"ruleId":"375","severity":2,"message":"387","line":58,"column":10,"nodeType":"366","messageId":"377","endLine":58,"endColumn":26},{"ruleId":"375","severity":2,"message":"388","line":59,"column":10,"nodeType":"366","messageId":"377","endLine":59,"endColumn":29},{"ruleId":"375","severity":2,"message":"389","line":62,"column":10,"nodeType":"366","messageId":"377","endLine":62,"endColumn":26},{"ruleId":"375","severity":2,"message":"390","line":65,"column":3,"nodeType":"366","messageId":"377","endLine":65,"endColumn":18},{"ruleId":"375","severity":2,"message":"390","line":67,"column":10,"nodeType":"366","messageId":"377","endLine":67,"endColumn":25},{"ruleId":"375","severity":2,"message":"391","line":71,"column":3,"nodeType":"366","messageId":"377","endLine":71,"endColumn":12},{"ruleId":"375","severity":2,"message":"392","line":72,"column":3,"nodeType":"366","messageId":"377","endLine":72,"endColumn":12},{"ruleId":"375","severity":2,"message":"391","line":74,"column":10,"nodeType":"366","messageId":"377","endLine":74,"endColumn":19},{"ruleId":"375","severity":2,"message":"392","line":75,"column":10,"nodeType":"366","messageId":"377","endLine":75,"endColumn":19},{"ruleId":"375","severity":2,"message":"392","line":77,"column":10,"nodeType":"366","messageId":"377","endLine":77,"endColumn":19},{"ruleId":"375","severity":2,"message":"391","line":79,"column":10,"nodeType":"366","messageId":"377","endLine":79,"endColumn":19},{"ruleId":"375","severity":2,"message":"392","line":80,"column":10,"nodeType":"366","messageId":"377","endLine":80,"endColumn":19},{"ruleId":"371","severity":2,"message":"372","line":90,"column":9,"nodeType":"378","messageId":"374","endLine":90,"endColumn":41},{"ruleId":"375","severity":2,"message":"385","line":90,"column":16,"nodeType":"366","messageId":"377","endLine":90,"endColumn":41},{"ruleId":"379","severity":2,"message":"380","line":90,"column":16,"nodeType":"362","messageId":"381","endLine":90,"endColumn":35},{"ruleId":"375","severity":2,"message":"386","line":92,"column":10,"nodeType":"366","messageId":"377","endLine":92,"endColumn":26},{"ruleId":"375","severity":2,"message":"389","line":93,"column":10,"nodeType":"366","messageId":"377","endLine":93,"endColumn":26},{"ruleId":"375","severity":2,"message":"393","line":96,"column":17,"nodeType":"366","messageId":"377","endLine":96,"endColumn":30},{"ruleId":"375","severity":2,"message":"394","line":97,"column":17,"nodeType":"366","messageId":"377","endLine":97,"endColumn":29},{"ruleId":"375","severity":2,"message":"395","line":99,"column":17,"nodeType":"366","messageId":"377","endLine":99,"endColumn":30},{"ruleId":"375","severity":2,"message":"396","line":100,"column":17,"nodeType":"366","messageId":"377","endLine":100,"endColumn":29},{"ruleId":"375","severity":2,"message":"397","line":103,"column":10,"nodeType":"366","messageId":"377","endLine":103,"endColumn":26},{"ruleId":"371","severity":2,"message":"372","line":54,"column":3,"nodeType":"373","messageId":"374","endLine":54,"endColumn":31},{"ruleId":"375","severity":2,"message":"398","line":54,"column":3,"nodeType":"366","messageId":"377","endLine":54,"endColumn":18},{"ruleId":"371","severity":2,"message":"372","line":55,"column":3,"nodeType":"373","messageId":"374","endLine":55,"endColumn":22},{"ruleId":"375","severity":2,"message":"399","line":55,"column":3,"nodeType":"366","messageId":"377","endLine":55,"endColumn":13},{"ruleId":"400","severity":2,"message":"401","line":57,"column":16,"nodeType":"402","messageId":"403","endLine":57,"endColumn":38},{"ruleId":"371","severity":2,"message":"372","line":59,"column":9,"nodeType":"378","messageId":"374","endLine":59,"endColumn":38},{"ruleId":"375","severity":2,"message":"404","line":61,"column":10,"nodeType":"366","messageId":"377","endLine":61,"endColumn":16},{"ruleId":"375","severity":2,"message":"399","line":62,"column":10,"nodeType":"366","messageId":"377","endLine":62,"endColumn":18},{"ruleId":"375","severity":2,"message":"398","line":63,"column":10,"nodeType":"366","messageId":"377","endLine":63,"endColumn":23},{"ruleId":"371","severity":2,"message":"372","line":88,"column":9,"nodeType":"378","messageId":"374","endLine":88,"endColumn":46},{"ruleId":"371","severity":2,"message":"372","line":90,"column":3,"nodeType":"373","messageId":"374","endLine":90,"endColumn":53},{"ruleId":"375","severity":2,"message":"405","line":90,"column":3,"nodeType":"366","messageId":"377","endLine":90,"endColumn":28},{"ruleId":"371","severity":2,"message":"372","line":92,"column":3,"nodeType":"373","messageId":"374","endLine":95,"endColumn":7},{"ruleId":"375","severity":2,"message":"406","line":92,"column":3,"nodeType":"366","messageId":"377","endLine":92,"endColumn":27},{"ruleId":"375","severity":2,"message":"407","line":94,"column":5,"nodeType":"366","messageId":"377","endLine":94,"endColumn":16},{"ruleId":"375","severity":2,"message":"406","line":99,"column":46,"nodeType":"366","messageId":"377","endLine":99,"endColumn":70},{"ruleId":"371","severity":2,"message":"372","line":101,"column":9,"nodeType":"378","messageId":"374","endLine":101,"endColumn":68},{"ruleId":"375","severity":2,"message":"405","line":106,"column":32,"nodeType":"366","messageId":"377","endLine":106,"endColumn":49},{"ruleId":"375","severity":2,"message":"405","line":107,"column":27,"nodeType":"366","messageId":"377","endLine":107,"endColumn":52},{"ruleId":"375","severity":2,"message":"406","line":109,"column":32,"nodeType":"366","messageId":"377","endLine":109,"endColumn":48},{"ruleId":"375","severity":2,"message":"406","line":110,"column":27,"nodeType":"366","messageId":"377","endLine":110,"endColumn":51},{"ruleId":"375","severity":2,"message":"405","line":114,"column":32,"nodeType":"366","messageId":"377","endLine":114,"endColumn":49},{"ruleId":"375","severity":2,"message":"406","line":117,"column":32,"nodeType":"366","messageId":"377","endLine":117,"endColumn":48},{"ruleId":"371","severity":2,"message":"372","line":128,"column":9,"nodeType":"378","messageId":"374","endLine":131,"endColumn":7},{"ruleId":"375","severity":2,"message":"407","line":130,"column":5,"nodeType":"366","messageId":"377","endLine":130,"endColumn":16},{"ruleId":"371","severity":2,"message":"372","line":133,"column":9,"nodeType":"378","messageId":"374","endLine":133,"endColumn":43},{"ruleId":"371","severity":2,"message":"372","line":146,"column":9,"nodeType":"378","messageId":"374","endLine":149,"endColumn":7},{"ruleId":"375","severity":2,"message":"407","line":148,"column":5,"nodeType":"366","messageId":"377","endLine":148,"endColumn":16},{"ruleId":"371","severity":2,"message":"372","line":151,"column":9,"nodeType":"378","messageId":"374","endLine":151,"endColumn":67},{"ruleId":"371","severity":2,"message":"372","line":164,"column":9,"nodeType":"378","messageId":"374","endLine":167,"endColumn":7},{"ruleId":"375","severity":2,"message":"407","line":166,"column":5,"nodeType":"366","messageId":"377","endLine":166,"endColumn":16},{"ruleId":"371","severity":2,"message":"372","line":169,"column":9,"nodeType":"378","messageId":"374","endLine":169,"endColumn":66},{"ruleId":"371","severity":2,"message":"372","line":177,"column":9,"nodeType":"378","messageId":"374","endLine":177,"endColumn":46},{"ruleId":"371","severity":2,"message":"372","line":179,"column":3,"nodeType":"373","messageId":"374","endLine":179,"endColumn":53},{"ruleId":"375","severity":2,"message":"405","line":179,"column":3,"nodeType":"366","messageId":"377","endLine":179,"endColumn":28},{"ruleId":"371","severity":2,"message":"372","line":181,"column":3,"nodeType":"373","messageId":"374","endLine":184,"endColumn":7},{"ruleId":"375","severity":2,"message":"406","line":181,"column":3,"nodeType":"366","messageId":"377","endLine":181,"endColumn":27},{"ruleId":"375","severity":2,"message":"407","line":183,"column":5,"nodeType":"366","messageId":"377","endLine":183,"endColumn":16},{"ruleId":"375","severity":2,"message":"406","line":188,"column":46,"nodeType":"366","messageId":"377","endLine":188,"endColumn":70},{"ruleId":"371","severity":2,"message":"372","line":190,"column":9,"nodeType":"378","messageId":"374","endLine":190,"endColumn":68},{"ruleId":"375","severity":2,"message":"405","line":195,"column":32,"nodeType":"366","messageId":"377","endLine":195,"endColumn":49},{"ruleId":"375","severity":2,"message":"405","line":196,"column":27,"nodeType":"366","messageId":"377","endLine":196,"endColumn":52},{"ruleId":"375","severity":2,"message":"406","line":198,"column":32,"nodeType":"366","messageId":"377","endLine":198,"endColumn":48},{"ruleId":"375","severity":2,"message":"406","line":199,"column":27,"nodeType":"366","messageId":"377","endLine":199,"endColumn":51},{"ruleId":"375","severity":2,"message":"405","line":202,"column":32,"nodeType":"366","messageId":"377","endLine":202,"endColumn":49},{"ruleId":"375","severity":2,"message":"406","line":205,"column":32,"nodeType":"366","messageId":"377","endLine":205,"endColumn":48},{"ruleId":"371","severity":2,"message":"372","line":214,"column":9,"nodeType":"378","messageId":"374","endLine":214,"endColumn":46},{"ruleId":"371","severity":2,"message":"372","line":216,"column":3,"nodeType":"373","messageId":"374","endLine":216,"endColumn":53},{"ruleId":"375","severity":2,"message":"405","line":216,"column":3,"nodeType":"366","messageId":"377","endLine":216,"endColumn":28},{"ruleId":"371","severity":2,"message":"372","line":218,"column":3,"nodeType":"373","messageId":"374","endLine":221,"endColumn":7},{"ruleId":"375","severity":2,"message":"406","line":218,"column":3,"nodeType":"366","messageId":"377","endLine":218,"endColumn":27},{"ruleId":"375","severity":2,"message":"407","line":220,"column":5,"nodeType":"366","messageId":"377","endLine":220,"endColumn":16},{"ruleId":"375","severity":2,"message":"406","line":225,"column":46,"nodeType":"366","messageId":"377","endLine":225,"endColumn":70},{"ruleId":"371","severity":2,"message":"372","line":227,"column":9,"nodeType":"378","messageId":"374","endLine":227,"endColumn":67},{"ruleId":"375","severity":2,"message":"405","line":230,"column":32,"nodeType":"366","messageId":"377","endLine":230,"endColumn":49},{"ruleId":"375","severity":2,"message":"405","line":231,"column":27,"nodeType":"366","messageId":"377","endLine":231,"endColumn":52},{"ruleId":"375","severity":2,"message":"406","line":233,"column":32,"nodeType":"366","messageId":"377","endLine":233,"endColumn":48},{"ruleId":"375","severity":2,"message":"406","line":234,"column":27,"nodeType":"366","messageId":"377","endLine":234,"endColumn":51},{"ruleId":"408","replacedBy":"409"},{"ruleId":"410","replacedBy":"411"},{"ruleId":"412","severity":2,"message":"413","line":63,"column":34,"nodeType":"362","messageId":"414","endLine":63,"endColumn":39},{"ruleId":"400","severity":2,"message":"401","line":20,"column":3,"nodeType":"415","messageId":"403","endLine":20,"endColumn":48},{"ruleId":"371","severity":2,"message":"372","line":24,"column":3,"nodeType":"373","messageId":"374","endLine":24,"endColumn":68},{"ruleId":"375","severity":2,"message":"376","line":24,"column":26,"nodeType":"366","messageId":"377","endLine":24,"endColumn":68},{"ruleId":"371","severity":2,"message":"372","line":27,"column":9,"nodeType":"378","messageId":"374","endLine":27,"endColumn":60},{"ruleId":"375","severity":2,"message":"376","line":27,"column":25,"nodeType":"366","messageId":"377","endLine":27,"endColumn":60},{"ruleId":"371","severity":2,"message":"372","line":39,"column":3,"nodeType":"373","messageId":"374","endLine":39,"endColumn":54},{"ruleId":"375","severity":2,"message":"376","line":39,"column":19,"nodeType":"366","messageId":"377","endLine":39,"endColumn":54},{"ruleId":"371","severity":2,"message":"372","line":47,"column":3,"nodeType":"373","messageId":"374","endLine":47,"endColumn":54},{"ruleId":"375","severity":2,"message":"376","line":47,"column":19,"nodeType":"366","messageId":"377","endLine":47,"endColumn":54},{"ruleId":"371","severity":2,"message":"372","line":55,"column":3,"nodeType":"373","messageId":"374","endLine":55,"endColumn":54},{"ruleId":"375","severity":2,"message":"376","line":55,"column":19,"nodeType":"366","messageId":"377","endLine":55,"endColumn":54},{"ruleId":"371","severity":2,"message":"372","line":63,"column":3,"nodeType":"373","messageId":"374","endLine":63,"endColumn":54},{"ruleId":"375","severity":2,"message":"376","line":63,"column":19,"nodeType":"366","messageId":"377","endLine":63,"endColumn":54},{"ruleId":"408","replacedBy":"409"},{"ruleId":"410","replacedBy":"411"},{"ruleId":"416","severity":2,"message":"417","line":13,"column":11,"nodeType":"418","messageId":"419","endLine":13,"endColumn":28,"suggestions":"420"},{"ruleId":"368","severity":2,"message":"421","line":22,"column":17,"nodeType":"362","messageId":"370","endLine":22,"endColumn":27},{"ruleId":"368","severity":2,"message":"422","line":29,"column":32,"nodeType":"362","messageId":"370","endLine":29,"endColumn":42},{"ruleId":"375","severity":2,"message":"423","line":14,"column":9,"nodeType":"366","messageId":"377","endLine":14,"endColumn":15},{"ruleId":"371","severity":2,"message":"372","line":12,"column":7,"nodeType":"378","messageId":"374","endLine":12,"endColumn":74},{"ruleId":"371","severity":2,"message":"372","line":20,"column":9,"nodeType":"378","messageId":"374","endLine":20,"endColumn":36},{"ruleId":"375","severity":2,"message":"424","line":28,"column":20,"nodeType":"366","messageId":"377","endLine":28,"endColumn":30},{"ruleId":"375","severity":2,"message":"424","line":33,"column":20,"nodeType":"366","messageId":"377","endLine":33,"endColumn":30},{"ruleId":"375","severity":2,"message":"382","line":44,"column":12,"nodeType":"366","messageId":"377","endLine":44,"endColumn":21},{"ruleId":"375","severity":2,"message":"425","line":44,"column":17,"nodeType":"362","messageId":"426","endLine":44,"endColumn":20},{"ruleId":"375","severity":2,"message":"425","line":45,"column":19,"nodeType":"362","messageId":"426","endLine":45,"endColumn":22},{"ruleId":"400","severity":2,"message":"401","line":51,"column":5,"nodeType":"415","messageId":"403","endLine":51,"endColumn":22},{"ruleId":"375","severity":2,"message":"382","line":51,"column":12,"nodeType":"366","messageId":"377","endLine":51,"endColumn":21},{"ruleId":"375","severity":2,"message":"425","line":51,"column":17,"nodeType":"362","messageId":"426","endLine":51,"endColumn":20},{"ruleId":"400","severity":2,"message":"401","line":58,"column":7,"nodeType":"415","messageId":"403","endLine":58,"endColumn":24},{"ruleId":"375","severity":2,"message":"382","line":58,"column":14,"nodeType":"366","messageId":"377","endLine":58,"endColumn":23},{"ruleId":"375","severity":2,"message":"425","line":58,"column":19,"nodeType":"362","messageId":"426","endLine":58,"endColumn":22},{"ruleId":"412","severity":2,"message":"427","line":62,"column":27,"nodeType":"362","messageId":"414","endLine":62,"endColumn":31},{"ruleId":"368","severity":2,"message":"428","line":67,"column":27,"nodeType":"362","messageId":"370","endLine":67,"endColumn":32},{"ruleId":"375","severity":2,"message":"382","line":73,"column":7,"nodeType":"366","messageId":"377","endLine":73,"endColumn":16},{"ruleId":"371","severity":2,"message":"372","line":83,"column":9,"nodeType":"378","messageId":"374","endLine":83,"endColumn":37},{"ruleId":"371","severity":2,"message":"372","line":84,"column":9,"nodeType":"378","messageId":"374","endLine":87,"endColumn":5},{"ruleId":"375","severity":2,"message":"429","line":91,"column":5,"nodeType":"366","messageId":"377","endLine":91,"endColumn":35},{"ruleId":"375","severity":2,"message":"429","line":94,"column":9,"nodeType":"366","messageId":"377","endLine":94,"endColumn":39},{"ruleId":"375","severity":2,"message":"430","line":95,"column":7,"nodeType":"366","messageId":"377","endLine":95,"endColumn":16},{"ruleId":"368","severity":2,"message":"428","line":95,"column":123,"nodeType":"366","messageId":"370","endLine":95,"endColumn":132},{"ruleId":"375","severity":2,"message":"430","line":95,"column":123,"nodeType":"366","messageId":"377","endLine":95,"endColumn":132},{"ruleId":"371","severity":2,"message":"372","line":102,"column":7,"nodeType":"378","messageId":"374","endLine":102,"endColumn":22},{"ruleId":"360","severity":2,"message":"431","line":104,"column":11,"nodeType":"373","messageId":"432","endLine":104,"endColumn":47,"suggestions":"433"},{"ruleId":"371","severity":2,"message":"372","line":104,"column":11,"nodeType":"373","messageId":"374","endLine":104,"endColumn":47},{"ruleId":"375","severity":2,"message":"434","line":105,"column":16,"nodeType":"366","messageId":"377","endLine":105,"endColumn":33},{"ruleId":"375","severity":2,"message":"434","line":106,"column":7,"nodeType":"366","messageId":"377","endLine":106,"endColumn":24},{"ruleId":"379","severity":2,"message":"380","line":106,"column":7,"nodeType":"366","messageId":"381","endLine":106,"endColumn":29},{"ruleId":"375","severity":2,"message":"385","line":110,"column":3,"nodeType":"366","messageId":"377","endLine":110,"endColumn":17},{"ruleId":"375","severity":2,"message":"435","line":111,"column":3,"nodeType":"366","messageId":"377","endLine":111,"endColumn":18},{"ruleId":"400","severity":2,"message":"401","line":115,"column":7,"nodeType":"415","messageId":"403","endLine":115,"endColumn":29},{"ruleId":"375","severity":2,"message":"436","line":115,"column":14,"nodeType":"366","messageId":"377","endLine":115,"endColumn":28},{"ruleId":"400","severity":2,"message":"401","line":119,"column":3,"nodeType":"415","messageId":"403","endLine":119,"endColumn":21},{"ruleId":"400","severity":2,"message":"401","line":23,"column":5,"nodeType":"415","messageId":"403","endLine":23,"endColumn":30},{"ruleId":"400","severity":2,"message":"401","line":25,"column":5,"nodeType":"415","messageId":"403","endLine":25,"endColumn":56},{"ruleId":"371","severity":2,"message":"372","line":36,"column":9,"nodeType":"378","messageId":"374","endLine":38,"endColumn":9},{"ruleId":"360","severity":2,"message":"437","line":36,"column":21,"nodeType":"366","messageId":"438","endLine":36,"endColumn":42,"suggestions":"439"},{"ruleId":"412","severity":2,"message":"440","line":37,"column":21,"nodeType":"402","messageId":"414","endLine":37,"endColumn":50},{"ruleId":"371","severity":2,"message":"372","line":52,"column":7,"nodeType":"373","messageId":"374","endLine":56,"endColumn":8},{"ruleId":"400","severity":2,"message":"401","line":62,"column":3,"nodeType":"415","messageId":"403","endLine":62,"endColumn":58},{"ruleId":"371","severity":2,"message":"372","line":70,"column":9,"nodeType":"378","messageId":"374","endLine":72,"endColumn":9},{"ruleId":"360","severity":2,"message":"437","line":70,"column":20,"nodeType":"366","messageId":"438","endLine":70,"endColumn":41,"suggestions":"441"},{"ruleId":"379","severity":2,"message":"442","line":71,"column":7,"nodeType":"443","messageId":"444","endLine":71,"endColumn":67},{"ruleId":"375","severity":2,"message":"434","line":71,"column":12,"nodeType":"366","messageId":"377","endLine":71,"endColumn":52},{"ruleId":"375","severity":2,"message":"445","line":78,"column":5,"nodeType":"366","messageId":"377","endLine":78,"endColumn":16},{"ruleId":"400","severity":2,"message":"401","line":85,"column":3,"nodeType":"415","messageId":"403","endLine":85,"endColumn":19},{"ruleId":"360","severity":2,"message":"437","line":52,"column":45,"nodeType":"366","messageId":"438","endLine":52,"endColumn":73,"suggestions":"446"},{"ruleId":"360","severity":2,"message":"437","line":93,"column":63,"nodeType":"362","messageId":"438","endLine":93,"endColumn":67,"suggestions":"447"},{"ruleId":"400","severity":2,"message":"401","line":61,"column":7,"nodeType":"415","messageId":"403","endLine":61,"endColumn":51},{"ruleId":"375","severity":2,"message":"448","line":61,"column":14,"nodeType":"366","messageId":"377","endLine":61,"endColumn":38},{"ruleId":"379","severity":2,"message":"380","line":61,"column":14,"nodeType":"366","messageId":"381","endLine":61,"endColumn":38},{"ruleId":"360","severity":2,"message":"431","line":11,"column":10,"nodeType":"362","messageId":"432","endLine":11,"endColumn":13,"suggestions":"449"},{"ruleId":"360","severity":2,"message":"431","line":11,"column":17,"nodeType":"366","messageId":"432","endLine":11,"endColumn":31,"suggestions":"450"},{"ruleId":"375","severity":2,"message":"451","line":11,"column":17,"nodeType":"366","messageId":"377","endLine":11,"endColumn":31},{"ruleId":"371","severity":2,"message":"372","line":11,"column":41,"nodeType":"452","messageId":"374","endLine":11,"endColumn":53},{"ruleId":"453","severity":2,"message":"454","line":10,"column":47,"nodeType":"362","messageId":"455","endLine":10,"endColumn":55,"suppressions":"456"},{"ruleId":"375","severity":2,"message":"457","line":14,"column":12,"nodeType":"366","messageId":"377","endLine":14,"endColumn":35},{"ruleId":"371","severity":2,"message":"372","line":22,"column":11,"nodeType":"378","messageId":"374","endLine":22,"endColumn":45},{"ruleId":"400","severity":2,"message":"401","line":24,"column":7,"nodeType":"415","messageId":"403","endLine":24,"endColumn":29},{"ruleId":"400","severity":2,"message":"401","line":26,"column":5,"nodeType":"415","messageId":"403","endLine":26,"endColumn":58},{"ruleId":"375","severity":2,"message":"376","line":26,"column":12,"nodeType":"366","messageId":"377","endLine":26,"endColumn":57},{"ruleId":"375","severity":2,"message":"423","line":28,"column":9,"nodeType":"366","messageId":"377","endLine":28,"endColumn":19},{"ruleId":"371","severity":2,"message":"372","line":33,"column":15,"nodeType":"378","messageId":"374","endLine":33,"endColumn":60},{"ruleId":"400","severity":2,"message":"401","line":36,"column":11,"nodeType":"415","messageId":"403","endLine":36,"endColumn":33},{"ruleId":"360","severity":2,"message":"431","line":39,"column":14,"nodeType":"366","messageId":"432","endLine":39,"endColumn":36,"suggestions":"458"},{"ruleId":"375","severity":2,"message":"376","line":39,"column":14,"nodeType":"366","messageId":"377","endLine":39,"endColumn":36},{"ruleId":"400","severity":2,"message":"401","line":45,"column":9,"nodeType":"415","messageId":"403","endLine":45,"endColumn":39},{"ruleId":"375","severity":2,"message":"376","line":45,"column":16,"nodeType":"366","messageId":"377","endLine":45,"endColumn":38},{"ruleId":"375","severity":2,"message":"430","line":47,"column":13,"nodeType":"366","messageId":"377","endLine":47,"endColumn":31},{"ruleId":"375","severity":2,"message":"423","line":14,"column":9,"nodeType":"366","messageId":"377","endLine":14,"endColumn":19},{"ruleId":"375","severity":2,"message":"423","line":14,"column":36,"nodeType":"366","messageId":"377","endLine":14,"endColumn":46},"@typescript-eslint/strict-boolean-expressions","Unexpected nullable number value in conditional. Please handle the nullish/zero/NaN cases explicitly.","Identifier","conditionErrorNullableNumber",["459","460","461"],"Unexpected object value in conditional. The condition is always true.","MemberExpression","conditionErrorObject","@typescript-eslint/restrict-template-expressions","Invalid type \"string[] | (() => void) | typeof (Anonymous class) | { abc: string; } | null\" of template literal expression.","invalidType","@typescript-eslint/no-unsafe-assignment","Unsafe assignment of an `any` value.","AssignmentExpression","anyAssignment","@typescript-eslint/no-unsafe-member-access","Unsafe member access .default on an `any` value.","unsafeMemberExpression","VariableDeclarator","@typescript-eslint/no-unsafe-call","Unsafe call of an `any` typed value.","unsafeCall","Unsafe member access [key] on an `any` value.","Unsafe member access .stdout on an `any` value.","Unsafe member access .stderr on an `any` value.","Unsafe member access .env on an `any` value.","Unsafe member access .PROP_STRING on an `any` value.","Unsafe member access .PROP_NUMBER on an `any` value.","Unsafe member access .PROP_UNDEFINED on an `any` value.","Unsafe member access .PROP_string on an `any` value.","Unsafe member access .PROP_ADDED on an `any` value.","Unsafe member access .prop on an `any` value.","Unsafe member access .PROP on an `any` value.","Unsafe member access .toString on an `any` value.","Unsafe member access .valueOf on an `any` value.","Unsafe member access .tostring on an `any` value.","Unsafe member access .valueof on an `any` value.","Unsafe member access .prop_string on an `any` value.","Unsafe member access .subcycle on an `any` value.","Unsafe member access .bar on an `any` value.","@typescript-eslint/no-unsafe-return","Unsafe return of an `any` typed value.","CallExpression","unsafeReturn","Unsafe member access .a on an `any` value.","Unsafe member access .nestedObject on an `any` value.","Unsafe member access .nestedArray on an `any` value.","Unsafe member access .length on an `any` value.","no-native-reassign",["462"],"no-negated-in-lhs",["463"],"@typescript-eslint/no-unsafe-argument","Unsafe argument of type `any[]` assigned to a parameter of type `string[]`.","unsafeArgument","ReturnStatement","@typescript-eslint/switch-exhaustiveness-check","Switch is not exhaustive. Cases not matched: \"bigint\" | \"boolean\" | \"symbol\" | \"object\"","UnaryExpression","switchIsNotExhaustive",["464"],"Invalid type \"number | undefined\" of template literal expression.","Invalid type \"Function\" of template literal expression.","Unsafe member access .code on an `any` value.","Unsafe member access [name] on an `any` value.","Computed name [key] resolves to an any value.","unsafeComputedMemberAccess","Unsafe argument of type `any` assigned to a parameter of type `object`.","Invalid type \"any\" of template literal expression.","Unsafe member access [Symbol.toStringTag] on an `any` value.","Unsafe member access .message on an `any` value.","Unexpected any value in conditional. An explicit comparison or type cast is required.","conditionErrorAny",["465"],"Unsafe member access .constructor on an `any` value.","Unsafe member access .send on an `any` value.","Unsafe member access .domain on an `any` value.","Unexpected nullable boolean value in conditional. Please handle the nullish case explicitly.","conditionErrorNullableBoolean",["466","467"],"Unsafe argument of type `any` assigned to a parameter of type `object | null`.",["468","469"],"Unsafe construction of an any type value.","NewExpression","unsafeNew","Unsafe member access [i] on an `any` value.",["470","471"],["472","473"],"Unsafe member access .apply on an `any` value.",["474"],["475"],"Unsafe member access .__esModule on an `any` value.","Property","@typescript-eslint/explicit-module-boundary-types","Argument 'obj' should be typed with a non-any type.","anyTypedArg",["476"],"Unsafe member access .then on an `any` value.",["477"],{"messageId":"478","fix":"479","desc":"480"},{"messageId":"481","fix":"482","desc":"483"},{"messageId":"484","fix":"485","desc":"486"},"no-global-assign","no-unsafe-negation",{"messageId":"487","fix":"488","desc":"489"},{"messageId":"484","fix":"490","desc":"486"},{"messageId":"491","fix":"492","desc":"493"},{"messageId":"494","fix":"495","desc":"496"},{"messageId":"491","fix":"497","desc":"493"},{"messageId":"494","fix":"498","desc":"496"},{"messageId":"491","fix":"499","desc":"493"},{"messageId":"500","fix":"501","desc":"502"},{"messageId":"491","fix":"503","desc":"493"},{"messageId":"500","fix":"504","desc":"502"},{"messageId":"484","fix":"505","desc":"486"},{"messageId":"484","fix":"506","desc":"486"},{"kind":"507","justification":"508"},{"messageId":"484","fix":"509","desc":"486"},"conditionFixCompareNullish",{"range":"510","text":"511"},"Change condition to check for null/undefined (`value != null`)","conditionFixDefaultZero",{"range":"510","text":"512"},"Explicitly treat nullish value the same as 0 (`value ?? 0`)","conditionFixCastBoolean",{"range":"510","text":"513"},"Explicitly cast value to a boolean (`Boolean(value)`)","addMissingCases",{"range":"514","text":"515"},"Add branches for missing cases.",{"range":"516","text":"517"},"conditionFixDefaultFalse",{"range":"518","text":"519"},"Explicitly treat nullish value the same as false (`value ?? false`)","conditionFixCompareTrue",{"range":"518","text":"520"},"Change condition to check if true (`value === true`)",{"range":"521","text":"519"},{"range":"521","text":"520"},{"range":"522","text":"523"},"conditionFixCompareFalse",{"range":"524","text":"525"},"Change condition to check if false (`value === false`)",{"range":"526","text":"527"},{"range":"528","text":"529"},{"range":"530","text":"531"},{"range":"532","text":"533"},"directive","",{"range":"534","text":"535"},[519,529],"stackLimit != null","stackLimit ?? 0","Boolean(stackLimit)",[614,614],"\n    case \"bigint\": { throw new Error('Not implemented yet: \"bigint\" case') }\n    case \"boolean\": { throw new Error('Not implemented yet: \"boolean\" case') }\n    case \"symbol\": { throw new Error('Not implemented yet: \"symbol\" case') }\n    case \"object\": { throw new Error('Not implemented yet: \"object\" case') }",[2959,2995],"Boolean((proto = Object.getPrototypeOf(proto)))",[991,1012],"(options.keepPrototype ?? false)","(options.keepPrototype === true)",[1831,1852],[1780,1808],"(isMatch.state.negatedExtglob ?? false)",[1779,1808],"(isMatch.state.negatedExtglob === false)",[3150,3154],"(kept ?? false)",[3149,3154],"(kept === false)",[501,504],"(Boolean(obj))",[508,522],"(Boolean(obj.__esModule))",[1189,1211],"(Boolean(importedModule.default))"]